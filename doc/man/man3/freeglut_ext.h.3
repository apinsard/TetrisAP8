.TH "/home/cj/workspace/Tetris/src/glut/freeglut_ext.h" 3 "Vendredi Février 21 2014" "Version alpha" "Tetris" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/cj/workspace/Tetris/src/glut/freeglut_ext.h \- 
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBGLUT_KEY_NUM_LOCK\fP   0x006D"
.br
.ti -1c
.RI "#define \fBGLUT_KEY_BEGIN\fP   0x006E"
.br
.ti -1c
.RI "#define \fBGLUT_KEY_DELETE\fP   0x006F"
.br
.ti -1c
.RI "#define \fBGLUT_ACTION_EXIT\fP   0"
.br
.ti -1c
.RI "#define \fBGLUT_ACTION_GLUTMAINLOOP_RETURNS\fP   1"
.br
.ti -1c
.RI "#define \fBGLUT_ACTION_CONTINUE_EXECUTION\fP   2"
.br
.ti -1c
.RI "#define \fBGLUT_CREATE_NEW_CONTEXT\fP   0"
.br
.ti -1c
.RI "#define \fBGLUT_USE_CURRENT_CONTEXT\fP   1"
.br
.ti -1c
.RI "#define \fBGLUT_FORCE_INDIRECT_CONTEXT\fP   0"
.br
.ti -1c
.RI "#define \fBGLUT_ALLOW_DIRECT_CONTEXT\fP   1"
.br
.ti -1c
.RI "#define \fBGLUT_TRY_DIRECT_CONTEXT\fP   2"
.br
.ti -1c
.RI "#define \fBGLUT_FORCE_DIRECT_CONTEXT\fP   3"
.br
.ti -1c
.RI "#define \fBGLUT_INIT_STATE\fP   0x007C"
.br
.ti -1c
.RI "#define \fBGLUT_ACTION_ON_WINDOW_CLOSE\fP   0x01F9"
.br
.ti -1c
.RI "#define \fBGLUT_WINDOW_BORDER_WIDTH\fP   0x01FA"
.br
.ti -1c
.RI "#define \fBGLUT_WINDOW_HEADER_HEIGHT\fP   0x01FB"
.br
.ti -1c
.RI "#define \fBGLUT_VERSION\fP   0x01FC"
.br
.ti -1c
.RI "#define \fBGLUT_RENDERING_CONTEXT\fP   0x01FD"
.br
.ti -1c
.RI "#define \fBGLUT_DIRECT_RENDERING\fP   0x01FE"
.br
.ti -1c
.RI "#define \fBGLUT_FULL_SCREEN\fP   0x01FF"
.br
.ti -1c
.RI "#define \fBGLUT_AUX\fP   0x1000"
.br
.ti -1c
.RI "#define \fBGLUT_AUX1\fP   0x1000"
.br
.ti -1c
.RI "#define \fBGLUT_AUX2\fP   0x2000"
.br
.ti -1c
.RI "#define \fBGLUT_AUX3\fP   0x4000"
.br
.ti -1c
.RI "#define \fBGLUT_AUX4\fP   0x8000"
.br
.ti -1c
.RI "#define \fBGLUT_INIT_MAJOR_VERSION\fP   0x0200"
.br
.ti -1c
.RI "#define \fBGLUT_INIT_MINOR_VERSION\fP   0x0201"
.br
.ti -1c
.RI "#define \fBGLUT_INIT_FLAGS\fP   0x0202"
.br
.ti -1c
.RI "#define \fBGLUT_INIT_PROFILE\fP   0x0203"
.br
.ti -1c
.RI "#define \fBGLUT_DEBUG\fP   0x0001"
.br
.ti -1c
.RI "#define \fBGLUT_FORWARD_COMPATIBLE\fP   0x0002"
.br
.ti -1c
.RI "#define \fBGLUT_CORE_PROFILE\fP   0x0001"
.br
.ti -1c
.RI "#define \fBGLUT_COMPATIBILITY_PROFILE\fP   0x0002"
.br
.ti -1c
.RI "#define \fBGLUT_CAPTIONLESS\fP   0x0400"
.br
.ti -1c
.RI "#define \fBGLUT_BORDERLESS\fP   0x0800"
.br
.ti -1c
.RI "#define \fBGLUT_SRGB\fP   0x1000"
.br
.in -1c
.SS "Définitions de type"

.in +1c
.ti -1c
.RI "typedef \fBvoid\fP(* \fBGLUTproc\fP )()"
.br
.in -1c
.SS "Fonctions"

.in +1c
.ti -1c
.RI "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP \fBglutMainLoopEvent\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP \fBglutLeaveMainLoop\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP \fBglutExit\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP \fBglutFullScreenToggle\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP \fBglutMouseWheelFunc\fP (\fBvoid\fP(*callback)(int, int, int, int))"
.br
.ti -1c
.RI "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP \fBglutCloseFunc\fP (\fBvoid\fP(*callback)(\fBvoid\fP))"
.br
.ti -1c
.RI "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP \fBglutWMCloseFunc\fP (\fBvoid\fP(*callback)(\fBvoid\fP))"
.br
.ti -1c
.RI "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP \fBglutMenuDestroyFunc\fP (\fBvoid\fP(*callback)(\fBvoid\fP))"
.br
.ti -1c
.RI "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP \fBglutSetOption\fP (\fBGLenum\fP option_flag, int \fBvalue\fP)"
.br
.ti -1c
.RI "\fBFGAPI\fP int *\fBFGAPIENTRY\fP \fBglutGetModeValues\fP (\fBGLenum\fP \fBmode\fP, int *\fBsize\fP)"
.br
.ti -1c
.RI "\fBFGAPI\fP \fBvoid\fP *\fBFGAPIENTRY\fP \fBglutGetWindowData\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP \fBglutSetWindowData\fP (\fBvoid\fP *\fBdata\fP)"
.br
.ti -1c
.RI "\fBFGAPI\fP \fBvoid\fP *\fBFGAPIENTRY\fP \fBglutGetMenuData\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP \fBglutSetMenuData\fP (\fBvoid\fP *\fBdata\fP)"
.br
.ti -1c
.RI "\fBFGAPI\fP int \fBFGAPIENTRY\fP \fBglutBitmapHeight\fP (\fBvoid\fP *font)"
.br
.ti -1c
.RI "\fBFGAPI\fP \fBGLfloat\fP \fBFGAPIENTRY\fP \fBglutStrokeHeight\fP (\fBvoid\fP *font)"
.br
.ti -1c
.RI "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP \fBglutBitmapString\fP (\fBvoid\fP *font, const unsigned char *\fBstring\fP)"
.br
.ti -1c
.RI "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP \fBglutStrokeString\fP (\fBvoid\fP *font, const unsigned char *\fBstring\fP)"
.br
.ti -1c
.RI "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP \fBglutWireRhombicDodecahedron\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP \fBglutSolidRhombicDodecahedron\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP \fBglutWireSierpinskiSponge\fP (int num_levels, \fBGLdouble\fP \fBoffset\fP[3], \fBGLdouble\fP \fBscale\fP)"
.br
.ti -1c
.RI "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP \fBglutSolidSierpinskiSponge\fP (int num_levels, \fBGLdouble\fP \fBoffset\fP[3], \fBGLdouble\fP \fBscale\fP)"
.br
.ti -1c
.RI "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP \fBglutWireCylinder\fP (\fBGLdouble\fP radius, \fBGLdouble\fP \fBheight\fP, \fBGLint\fP slices, \fBGLint\fP stacks)"
.br
.ti -1c
.RI "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP \fBglutSolidCylinder\fP (\fBGLdouble\fP radius, \fBGLdouble\fP \fBheight\fP, \fBGLint\fP slices, \fBGLint\fP stacks)"
.br
.ti -1c
.RI "\fBFGAPI\fP \fBGLUTproc\fP \fBFGAPIENTRY\fP \fBglutGetProcAddress\fP (const char *procName)"
.br
.ti -1c
.RI "int \fBglutJoystickGetNumAxes\fP (int ident)"
.br
.ti -1c
.RI "int \fBglutJoystickGetNumButtons\fP (int ident)"
.br
.ti -1c
.RI "int \fBglutJoystickNotWorking\fP (int ident)"
.br
.ti -1c
.RI "float \fBglutJoystickGetDeadBand\fP (int ident, int axis)"
.br
.ti -1c
.RI "\fBvoid\fP \fBglutJoystickSetDeadBand\fP (int ident, int axis, float db)"
.br
.ti -1c
.RI "float \fBglutJoystickGetSaturation\fP (int ident, int axis)"
.br
.ti -1c
.RI "\fBvoid\fP \fBglutJoystickSetSaturation\fP (int ident, int axis, float st)"
.br
.ti -1c
.RI "\fBvoid\fP \fBglutJoystickSetMinRange\fP (int ident, float *axes)"
.br
.ti -1c
.RI "\fBvoid\fP \fBglutJoystickSetMaxRange\fP (int ident, float *axes)"
.br
.ti -1c
.RI "\fBvoid\fP \fBglutJoystickSetCenter\fP (int ident, float *axes)"
.br
.ti -1c
.RI "\fBvoid\fP \fBglutJoystickGetMinRange\fP (int ident, float *axes)"
.br
.ti -1c
.RI "\fBvoid\fP \fBglutJoystickGetMaxRange\fP (int ident, float *axes)"
.br
.ti -1c
.RI "\fBvoid\fP \fBglutJoystickGetCenter\fP (int ident, float *axes)"
.br
.ti -1c
.RI "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP \fBglutInitContextVersion\fP (int majorVersion, int minorVersion)"
.br
.ti -1c
.RI "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP \fBglutInitContextFlags\fP (int \fBflags\fP)"
.br
.ti -1c
.RI "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP \fBglutInitContextProfile\fP (int profile)"
.br
.in -1c
.SH "Documentation des macros"
.PP 
.SS "#define GLUT_ACTION_CONTINUE_EXECUTION   2"

.PP
Définition à la ligne 47 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_ACTION_EXIT   0"

.PP
Définition à la ligne 45 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_ACTION_GLUTMAINLOOP_RETURNS   1"

.PP
Définition à la ligne 46 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_ACTION_ON_WINDOW_CLOSE   0x01F9"

.PP
Définition à la ligne 68 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_ALLOW_DIRECT_CONTEXT   1"

.PP
Définition à la ligne 59 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_AUX   0x1000"

.PP
Définition à la ligne 85 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_AUX1   0x1000"

.PP
Définition à la ligne 87 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_AUX2   0x2000"

.PP
Définition à la ligne 88 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_AUX3   0x4000"

.PP
Définition à la ligne 89 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_AUX4   0x8000"

.PP
Définition à la ligne 90 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_BORDERLESS   0x0800"

.PP
Définition à la ligne 203 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_CAPTIONLESS   0x0400"

.PP
Définition à la ligne 202 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_COMPATIBILITY_PROFILE   0x0002"

.PP
Définition à la ligne 111 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_CORE_PROFILE   0x0001"

.PP
Définition à la ligne 110 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_CREATE_NEW_CONTEXT   0"

.PP
Définition à la ligne 52 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_DEBUG   0x0001"

.PP
Définition à la ligne 103 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_DIRECT_RENDERING   0x01FE"

.PP
Définition à la ligne 76 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_FORCE_DIRECT_CONTEXT   3"

.PP
Définition à la ligne 61 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_FORCE_INDIRECT_CONTEXT   0"

.PP
Définition à la ligne 58 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_FORWARD_COMPATIBLE   0x0002"

.PP
Définition à la ligne 104 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_FULL_SCREEN   0x01FF"

.PP
Définition à la ligne 78 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_INIT_FLAGS   0x0202"

.PP
Définition à la ligne 97 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_INIT_MAJOR_VERSION   0x0200"

.PP
Définition à la ligne 95 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_INIT_MINOR_VERSION   0x0201"

.PP
Définition à la ligne 96 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_INIT_PROFILE   0x0203"

.PP
Définition à la ligne 98 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_INIT_STATE   0x007C"

.PP
Définition à la ligne 66 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_KEY_BEGIN   0x006E"

.PP
Définition à la ligne 39 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_KEY_DELETE   0x006F"

.PP
Définition à la ligne 40 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_KEY_NUM_LOCK   0x006D"

.PP
Définition à la ligne 38 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_RENDERING_CONTEXT   0x01FD"

.PP
Définition à la ligne 75 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_SRGB   0x1000"

.PP
Définition à la ligne 204 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_TRY_DIRECT_CONTEXT   2"

.PP
Définition à la ligne 60 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_USE_CURRENT_CONTEXT   1"

.PP
Définition à la ligne 53 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_VERSION   0x01FC"

.PP
Définition à la ligne 73 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_WINDOW_BORDER_WIDTH   0x01FA"

.PP
Définition à la ligne 70 du fichier freeglut_ext\&.h\&.
.SS "#define GLUT_WINDOW_HEADER_HEIGHT   0x01FB"

.PP
Définition à la ligne 71 du fichier freeglut_ext\&.h\&.
.SH "Documentation des définitions de type"
.PP 
.SS "typedef \fBvoid\fP(* GLUTproc)()"

.PP
Définition à la ligne 166 du fichier freeglut_ext\&.h\&.
.SH "Documentation des fonctions"
.PP 
.SS "\fBFGAPI\fP int \fBFGAPIENTRY\fP glutBitmapHeight (\fBvoid\fP *font)"

.SS "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP glutBitmapString (\fBvoid\fP *font, const unsigned char *string)"

.SS "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP glutCloseFunc (\fBvoid\fP(*)(\fBvoid\fP)callback)"

.SS "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP glutExit (\fBvoid\fP)"

.SS "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP glutFullScreenToggle (\fBvoid\fP)"

.SS "\fBFGAPI\fP \fBvoid\fP* \fBFGAPIENTRY\fP glutGetMenuData (\fBvoid\fP)"

.SS "\fBFGAPI\fP int* \fBFGAPIENTRY\fP glutGetModeValues (\fBGLenum\fPmode, int *size)"

.SS "\fBFGAPI\fP \fBGLUTproc\fP \fBFGAPIENTRY\fP glutGetProcAddress (const char *procName)"

.SS "\fBFGAPI\fP \fBvoid\fP* \fBFGAPIENTRY\fP glutGetWindowData (\fBvoid\fP)"

.SS "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP glutInitContextFlags (intflags)"

.SS "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP glutInitContextProfile (intprofile)"

.SS "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP glutInitContextVersion (intmajorVersion, intminorVersion)"

.SS "\fBvoid\fP glutJoystickGetCenter (intident, float *axes)"

.SS "float glutJoystickGetDeadBand (intident, intaxis)"

.SS "\fBvoid\fP glutJoystickGetMaxRange (intident, float *axes)"

.SS "\fBvoid\fP glutJoystickGetMinRange (intident, float *axes)"

.SS "int glutJoystickGetNumAxes (intident)"

.SS "int glutJoystickGetNumButtons (intident)"

.SS "float glutJoystickGetSaturation (intident, intaxis)"

.SS "int glutJoystickNotWorking (intident)"

.SS "\fBvoid\fP glutJoystickSetCenter (intident, float *axes)"

.SS "\fBvoid\fP glutJoystickSetDeadBand (intident, intaxis, floatdb)"

.SS "\fBvoid\fP glutJoystickSetMaxRange (intident, float *axes)"

.SS "\fBvoid\fP glutJoystickSetMinRange (intident, float *axes)"

.SS "\fBvoid\fP glutJoystickSetSaturation (intident, intaxis, floatst)"

.SS "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP glutLeaveMainLoop (\fBvoid\fP)"

.SS "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP glutMainLoopEvent (\fBvoid\fP)"

.SS "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP glutMenuDestroyFunc (\fBvoid\fP(*)(\fBvoid\fP)callback)"

.SS "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP glutMouseWheelFunc (\fBvoid\fP(*)(int, int, int, int)callback)"

.SS "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP glutSetMenuData (\fBvoid\fP *data)"

.SS "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP glutSetOption (\fBGLenum\fPoption_flag, intvalue)"

.SS "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP glutSetWindowData (\fBvoid\fP *data)"

.SS "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP glutSolidCylinder (\fBGLdouble\fPradius, \fBGLdouble\fPheight, \fBGLint\fPslices, \fBGLint\fPstacks)"

.SS "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP glutSolidRhombicDodecahedron (\fBvoid\fP)"

.SS "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP glutSolidSierpinskiSponge (intnum_levels, \fBGLdouble\fPoffset[3], \fBGLdouble\fPscale)"

.SS "\fBFGAPI\fP \fBGLfloat\fP \fBFGAPIENTRY\fP glutStrokeHeight (\fBvoid\fP *font)"

.SS "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP glutStrokeString (\fBvoid\fP *font, const unsigned char *string)"

.SS "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP glutWireCylinder (\fBGLdouble\fPradius, \fBGLdouble\fPheight, \fBGLint\fPslices, \fBGLint\fPstacks)"

.SS "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP glutWireRhombicDodecahedron (\fBvoid\fP)"

.SS "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP glutWireSierpinskiSponge (intnum_levels, \fBGLdouble\fPoffset[3], \fBGLdouble\fPscale)"

.SS "\fBFGAPI\fP \fBvoid\fP \fBFGAPIENTRY\fP glutWMCloseFunc (\fBvoid\fP(*)(\fBvoid\fP)callback)"

.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour Tetris à partir du code source\&.
