.TH "/home/cj/workspace/Tetris/src/glut/glx.h" 3 "Vendredi Février 21 2014" "Version alpha" "Tetris" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/cj/workspace/Tetris/src/glut/glx.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <X11/Xlib\&.h>\fP
.br
\fC#include <X11/Xutil\&.h>\fP
.br
\fC#include <GL/gl\&.h>\fP
.br
\fC#include <GL/glxext\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBGLXPbufferClobberEvent\fP"
.br
.ti -1c
.RI "struct \fBGLXBufferSwapComplete\fP"
.br
.ti -1c
.RI "union \fB__GLXEvent\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBGLX_VERSION_1_1\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_VERSION_1_2\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_VERSION_1_3\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_VERSION_1_4\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_EXTENSION_NAME\fP   'GLX'"
.br
.ti -1c
.RI "#define \fBGLX_USE_GL\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_BUFFER_SIZE\fP   2"
.br
.ti -1c
.RI "#define \fBGLX_LEVEL\fP   3"
.br
.ti -1c
.RI "#define \fBGLX_RGBA\fP   4"
.br
.ti -1c
.RI "#define \fBGLX_DOUBLEBUFFER\fP   5"
.br
.ti -1c
.RI "#define \fBGLX_STEREO\fP   6"
.br
.ti -1c
.RI "#define \fBGLX_AUX_BUFFERS\fP   7"
.br
.ti -1c
.RI "#define \fBGLX_RED_SIZE\fP   8"
.br
.ti -1c
.RI "#define \fBGLX_GREEN_SIZE\fP   9"
.br
.ti -1c
.RI "#define \fBGLX_BLUE_SIZE\fP   10"
.br
.ti -1c
.RI "#define \fBGLX_ALPHA_SIZE\fP   11"
.br
.ti -1c
.RI "#define \fBGLX_DEPTH_SIZE\fP   12"
.br
.ti -1c
.RI "#define \fBGLX_STENCIL_SIZE\fP   13"
.br
.ti -1c
.RI "#define \fBGLX_ACCUM_RED_SIZE\fP   14"
.br
.ti -1c
.RI "#define \fBGLX_ACCUM_GREEN_SIZE\fP   15"
.br
.ti -1c
.RI "#define \fBGLX_ACCUM_BLUE_SIZE\fP   16"
.br
.ti -1c
.RI "#define \fBGLX_ACCUM_ALPHA_SIZE\fP   17"
.br
.ti -1c
.RI "#define \fBGLX_BAD_SCREEN\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_BAD_ATTRIBUTE\fP   2"
.br
.ti -1c
.RI "#define \fBGLX_NO_EXTENSION\fP   3"
.br
.ti -1c
.RI "#define \fBGLX_BAD_VISUAL\fP   4"
.br
.ti -1c
.RI "#define \fBGLX_BAD_CONTEXT\fP   5"
.br
.ti -1c
.RI "#define \fBGLX_BAD_VALUE\fP   6"
.br
.ti -1c
.RI "#define \fBGLX_BAD_ENUM\fP   7"
.br
.ti -1c
.RI "#define \fBGLX_VENDOR\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_VERSION\fP   2"
.br
.ti -1c
.RI "#define \fBGLX_EXTENSIONS\fP   3"
.br
.ti -1c
.RI "#define \fBGLX_CONFIG_CAVEAT\fP   0x20"
.br
.ti -1c
.RI "#define \fBGLX_DONT_CARE\fP   0xFFFFFFFF"
.br
.ti -1c
.RI "#define \fBGLX_X_VISUAL_TYPE\fP   0x22"
.br
.ti -1c
.RI "#define \fBGLX_TRANSPARENT_TYPE\fP   0x23"
.br
.ti -1c
.RI "#define \fBGLX_TRANSPARENT_INDEX_VALUE\fP   0x24"
.br
.ti -1c
.RI "#define \fBGLX_TRANSPARENT_RED_VALUE\fP   0x25"
.br
.ti -1c
.RI "#define \fBGLX_TRANSPARENT_GREEN_VALUE\fP   0x26"
.br
.ti -1c
.RI "#define \fBGLX_TRANSPARENT_BLUE_VALUE\fP   0x27"
.br
.ti -1c
.RI "#define \fBGLX_TRANSPARENT_ALPHA_VALUE\fP   0x28"
.br
.ti -1c
.RI "#define \fBGLX_WINDOW_BIT\fP   0x00000001"
.br
.ti -1c
.RI "#define \fBGLX_PIXMAP_BIT\fP   0x00000002"
.br
.ti -1c
.RI "#define \fBGLX_PBUFFER_BIT\fP   0x00000004"
.br
.ti -1c
.RI "#define \fBGLX_AUX_BUFFERS_BIT\fP   0x00000010"
.br
.ti -1c
.RI "#define \fBGLX_FRONT_LEFT_BUFFER_BIT\fP   0x00000001"
.br
.ti -1c
.RI "#define \fBGLX_FRONT_RIGHT_BUFFER_BIT\fP   0x00000002"
.br
.ti -1c
.RI "#define \fBGLX_BACK_LEFT_BUFFER_BIT\fP   0x00000004"
.br
.ti -1c
.RI "#define \fBGLX_BACK_RIGHT_BUFFER_BIT\fP   0x00000008"
.br
.ti -1c
.RI "#define \fBGLX_DEPTH_BUFFER_BIT\fP   0x00000020"
.br
.ti -1c
.RI "#define \fBGLX_STENCIL_BUFFER_BIT\fP   0x00000040"
.br
.ti -1c
.RI "#define \fBGLX_ACCUM_BUFFER_BIT\fP   0x00000080"
.br
.ti -1c
.RI "#define \fBGLX_NONE\fP   0x8000"
.br
.ti -1c
.RI "#define \fBGLX_SLOW_CONFIG\fP   0x8001"
.br
.ti -1c
.RI "#define \fBGLX_TRUE_COLOR\fP   0x8002"
.br
.ti -1c
.RI "#define \fBGLX_DIRECT_COLOR\fP   0x8003"
.br
.ti -1c
.RI "#define \fBGLX_PSEUDO_COLOR\fP   0x8004"
.br
.ti -1c
.RI "#define \fBGLX_STATIC_COLOR\fP   0x8005"
.br
.ti -1c
.RI "#define \fBGLX_GRAY_SCALE\fP   0x8006"
.br
.ti -1c
.RI "#define \fBGLX_STATIC_GRAY\fP   0x8007"
.br
.ti -1c
.RI "#define \fBGLX_TRANSPARENT_RGB\fP   0x8008"
.br
.ti -1c
.RI "#define \fBGLX_TRANSPARENT_INDEX\fP   0x8009"
.br
.ti -1c
.RI "#define \fBGLX_VISUAL_ID\fP   0x800B"
.br
.ti -1c
.RI "#define \fBGLX_SCREEN\fP   0x800C"
.br
.ti -1c
.RI "#define \fBGLX_NON_CONFORMANT_CONFIG\fP   0x800D"
.br
.ti -1c
.RI "#define \fBGLX_DRAWABLE_TYPE\fP   0x8010"
.br
.ti -1c
.RI "#define \fBGLX_RENDER_TYPE\fP   0x8011"
.br
.ti -1c
.RI "#define \fBGLX_X_RENDERABLE\fP   0x8012"
.br
.ti -1c
.RI "#define \fBGLX_FBCONFIG_ID\fP   0x8013"
.br
.ti -1c
.RI "#define \fBGLX_RGBA_TYPE\fP   0x8014"
.br
.ti -1c
.RI "#define \fBGLX_COLOR_INDEX_TYPE\fP   0x8015"
.br
.ti -1c
.RI "#define \fBGLX_MAX_PBUFFER_WIDTH\fP   0x8016"
.br
.ti -1c
.RI "#define \fBGLX_MAX_PBUFFER_HEIGHT\fP   0x8017"
.br
.ti -1c
.RI "#define \fBGLX_MAX_PBUFFER_PIXELS\fP   0x8018"
.br
.ti -1c
.RI "#define \fBGLX_PRESERVED_CONTENTS\fP   0x801B"
.br
.ti -1c
.RI "#define \fBGLX_LARGEST_PBUFFER\fP   0x801C"
.br
.ti -1c
.RI "#define \fBGLX_WIDTH\fP   0x801D"
.br
.ti -1c
.RI "#define \fBGLX_HEIGHT\fP   0x801E"
.br
.ti -1c
.RI "#define \fBGLX_EVENT_MASK\fP   0x801F"
.br
.ti -1c
.RI "#define \fBGLX_DAMAGED\fP   0x8020"
.br
.ti -1c
.RI "#define \fBGLX_SAVED\fP   0x8021"
.br
.ti -1c
.RI "#define \fBGLX_WINDOW\fP   0x8022"
.br
.ti -1c
.RI "#define \fBGLX_PBUFFER\fP   0x8023"
.br
.ti -1c
.RI "#define \fBGLX_PBUFFER_HEIGHT\fP   0x8040"
.br
.ti -1c
.RI "#define \fBGLX_PBUFFER_WIDTH\fP   0x8041"
.br
.ti -1c
.RI "#define \fBGLX_RGBA_BIT\fP   0x00000001"
.br
.ti -1c
.RI "#define \fBGLX_COLOR_INDEX_BIT\fP   0x00000002"
.br
.ti -1c
.RI "#define \fBGLX_PBUFFER_CLOBBER_MASK\fP   0x08000000"
.br
.ti -1c
.RI "#define \fBGLX_SAMPLE_BUFFERS\fP   0x186a0 /*100000*/"
.br
.ti -1c
.RI "#define \fBGLX_SAMPLES\fP   0x186a1 /*100001*/"
.br
.ti -1c
.RI "#define \fBGLX_PbufferClobber\fP   0"
.br
.ti -1c
.RI "#define \fBGLX_BufferSwapComplete\fP   1"
.br
.ti -1c
.RI "#define \fB__GLX_NUMBER_EVENTS\fP   17"
.br
.ti -1c
.RI "#define \fBGLX_ARB_get_proc_address\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_NV_vertex_array_range\fP"
.br
.ti -1c
.RI "#define \fBGLX_ARB_render_texture\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_NV_float_buffer\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_FLOAT_COMPONENTS_NV\fP   0x20B0"
.br
.ti -1c
.RI "#define \fBGLX_MESA_swap_frame_usage\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_MESA_swap_control\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_EXT_texture_from_pixmap\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_BIND_TO_TEXTURE_RGB_EXT\fP   0x20D0"
.br
.ti -1c
.RI "#define \fBGLX_BIND_TO_TEXTURE_RGBA_EXT\fP   0x20D1"
.br
.ti -1c
.RI "#define \fBGLX_BIND_TO_MIPMAP_TEXTURE_EXT\fP   0x20D2"
.br
.ti -1c
.RI "#define \fBGLX_BIND_TO_TEXTURE_TARGETS_EXT\fP   0x20D3"
.br
.ti -1c
.RI "#define \fBGLX_Y_INVERTED_EXT\fP   0x20D4"
.br
.ti -1c
.RI "#define \fBGLX_TEXTURE_FORMAT_EXT\fP   0x20D5"
.br
.ti -1c
.RI "#define \fBGLX_TEXTURE_TARGET_EXT\fP   0x20D6"
.br
.ti -1c
.RI "#define \fBGLX_MIPMAP_TEXTURE_EXT\fP   0x20D7"
.br
.ti -1c
.RI "#define \fBGLX_TEXTURE_FORMAT_NONE_EXT\fP   0x20D8"
.br
.ti -1c
.RI "#define \fBGLX_TEXTURE_FORMAT_RGB_EXT\fP   0x20D9"
.br
.ti -1c
.RI "#define \fBGLX_TEXTURE_FORMAT_RGBA_EXT\fP   0x20DA"
.br
.ti -1c
.RI "#define \fBGLX_TEXTURE_1D_BIT_EXT\fP   0x00000001"
.br
.ti -1c
.RI "#define \fBGLX_TEXTURE_2D_BIT_EXT\fP   0x00000002"
.br
.ti -1c
.RI "#define \fBGLX_TEXTURE_RECTANGLE_BIT_EXT\fP   0x00000004"
.br
.ti -1c
.RI "#define \fBGLX_TEXTURE_1D_EXT\fP   0x20DB"
.br
.ti -1c
.RI "#define \fBGLX_TEXTURE_2D_EXT\fP   0x20DC"
.br
.ti -1c
.RI "#define \fBGLX_TEXTURE_RECTANGLE_EXT\fP   0x20DD"
.br
.ti -1c
.RI "#define \fBGLX_FRONT_LEFT_EXT\fP   0x20DE"
.br
.ti -1c
.RI "#define \fBGLX_FRONT_RIGHT_EXT\fP   0x20DF"
.br
.ti -1c
.RI "#define \fBGLX_BACK_LEFT_EXT\fP   0x20E0"
.br
.ti -1c
.RI "#define \fBGLX_BACK_RIGHT_EXT\fP   0x20E1"
.br
.ti -1c
.RI "#define \fBGLX_FRONT_EXT\fP   \fBGLX_FRONT_LEFT_EXT\fP"
.br
.ti -1c
.RI "#define \fBGLX_BACK_EXT\fP   \fBGLX_BACK_LEFT_EXT\fP"
.br
.ti -1c
.RI "#define \fBGLX_AUX0_EXT\fP   0x20E2"
.br
.ti -1c
.RI "#define \fBGLX_AUX1_EXT\fP   0x20E3"
.br
.ti -1c
.RI "#define \fBGLX_AUX2_EXT\fP   0x20E4"
.br
.ti -1c
.RI "#define \fBGLX_AUX3_EXT\fP   0x20E5"
.br
.ti -1c
.RI "#define \fBGLX_AUX4_EXT\fP   0x20E6"
.br
.ti -1c
.RI "#define \fBGLX_AUX5_EXT\fP   0x20E7"
.br
.ti -1c
.RI "#define \fBGLX_AUX6_EXT\fP   0x20E8"
.br
.ti -1c
.RI "#define \fBGLX_AUX7_EXT\fP   0x20E9"
.br
.ti -1c
.RI "#define \fBGLX_AUX8_EXT\fP   0x20EA"
.br
.ti -1c
.RI "#define \fBGLX_AUX9_EXT\fP   0x20EB"
.br
.in -1c
.SS "Définitions de type"

.in +1c
.ti -1c
.RI "typedef struct __GLXcontextRec * \fBGLXContext\fP"
.br
.ti -1c
.RI "typedef XID \fBGLXPixmap\fP"
.br
.ti -1c
.RI "typedef XID \fBGLXDrawable\fP"
.br
.ti -1c
.RI "typedef struct __GLXFBConfigRec * \fBGLXFBConfig\fP"
.br
.ti -1c
.RI "typedef XID \fBGLXFBConfigID\fP"
.br
.ti -1c
.RI "typedef XID \fBGLXContextID\fP"
.br
.ti -1c
.RI "typedef XID \fBGLXWindow\fP"
.br
.ti -1c
.RI "typedef XID \fBGLXPbuffer\fP"
.br
.ti -1c
.RI "typedef \fBGLXFBConfig\fP *(* \fBPFNGLXGETFBCONFIGSPROC\fP )(Display *dpy, int screen, int *nelements)"
.br
.ti -1c
.RI "typedef \fBGLXFBConfig\fP *(* \fBPFNGLXCHOOSEFBCONFIGPROC\fP )(Display *dpy, int screen, const int *attrib_list, int *nelements)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXGETFBCONFIGATTRIBPROC\fP )(Display *dpy, \fBGLXFBConfig\fP config, int attribute, int *\fBvalue\fP)"
.br
.ti -1c
.RI "typedef XVisualInfo *(* \fBPFNGLXGETVISUALFROMFBCONFIGPROC\fP )(Display *dpy, \fBGLXFBConfig\fP config)"
.br
.ti -1c
.RI "typedef \fBGLXWindow\fP(* \fBPFNGLXCREATEWINDOWPROC\fP )(Display *dpy, \fBGLXFBConfig\fP config, Window win, const int *attrib_list)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXDESTROYWINDOWPROC\fP )(Display *dpy, \fBGLXWindow\fP win)"
.br
.ti -1c
.RI "typedef \fBGLXPixmap\fP(* \fBPFNGLXCREATEPIXMAPPROC\fP )(Display *dpy, \fBGLXFBConfig\fP config, Pixmap pixmap, const int *attrib_list)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXDESTROYPIXMAPPROC\fP )(Display *dpy, \fBGLXPixmap\fP pixmap)"
.br
.ti -1c
.RI "typedef \fBGLXPbuffer\fP(* \fBPFNGLXCREATEPBUFFERPROC\fP )(Display *dpy, \fBGLXFBConfig\fP config, const int *attrib_list)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXDESTROYPBUFFERPROC\fP )(Display *dpy, \fBGLXPbuffer\fP pbuf)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXQUERYDRAWABLEPROC\fP )(Display *dpy, \fBGLXDrawable\fP draw, int attribute, unsigned int *\fBvalue\fP)"
.br
.ti -1c
.RI "typedef \fBGLXContext\fP(* \fBPFNGLXCREATENEWCONTEXTPROC\fP )(Display *dpy, \fBGLXFBConfig\fP config, int render_type, \fBGLXContext\fP share_list, Bool direct)"
.br
.ti -1c
.RI "typedef Bool(* \fBPFNGLXMAKECONTEXTCURRENTPROC\fP )(Display *dpy, \fBGLXDrawable\fP draw, \fBGLXDrawable\fP read, \fBGLXContext\fP ctx)"
.br
.ti -1c
.RI "typedef \fBGLXDrawable\fP(* \fBPFNGLXGETCURRENTREADDRAWABLEPROC\fP )(\fBvoid\fP)"
.br
.ti -1c
.RI "typedef Display *(* \fBPFNGLXGETCURRENTDISPLAYPROC\fP )(\fBvoid\fP)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXQUERYCONTEXTPROC\fP )(Display *dpy, \fBGLXContext\fP ctx, int attribute, int *\fBvalue\fP)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXSELECTEVENTPROC\fP )(Display *dpy, \fBGLXDrawable\fP draw, unsigned long event_mask)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXGETSELECTEDEVENTPROC\fP )(Display *dpy, \fBGLXDrawable\fP draw, unsigned long *event_mask)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fB__GLXextFuncPtr\fP )(\fBvoid\fP)"
.br
.ti -1c
.RI "typedef \fB__GLXextFuncPtr\fP(* \fBPFNGLXGETPROCADDRESSPROC\fP )(const \fBGLubyte\fP *procName)"
.br
.ti -1c
.RI "typedef \fBvoid\fP *(* \fBPFNGLXALLOCATEMEMORYNVPROC\fP )(\fBGLsizei\fP \fBsize\fP, \fBGLfloat\fP readfreq, \fBGLfloat\fP writefreq, \fBGLfloat\fP priority)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXFREEMEMORYNVPROC\fP )(\fBGLvoid\fP *\fBpointer\fP)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXGETFRAMEUSAGEMESAPROC\fP )(Display *dpy, \fBGLXDrawable\fP drawable, float *\fBusage\fP)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXBEGINFRAMETRACKINGMESAPROC\fP )(Display *dpy, \fBGLXDrawable\fP drawable)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXENDFRAMETRACKINGMESAPROC\fP )(Display *dpy, \fBGLXDrawable\fP drawable)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXQUERYFRAMETRACKINGMESAPROC\fP )(Display *dpy, \fBGLXDrawable\fP drawable, int64_t *swapCount, int64_t *missedFrames, float *lastMissedUsage)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXSWAPINTERVALMESAPROC\fP )(unsigned int interval)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXGETSWAPINTERVALMESAPROC\fP )(\fBvoid\fP)"
.br
.ti -1c
.RI "typedef union \fB__GLXEvent\fP \fBGLXEvent\fP"
.br
.in -1c
.SS "Fonctions"

.in +1c
.ti -1c
.RI "XVisualInfo * \fBglXChooseVisual\fP (Display *dpy, int screen, int *attribList)"
.br
.ti -1c
.RI "\fBGLXContext\fP \fBglXCreateContext\fP (Display *dpy, XVisualInfo *vis, \fBGLXContext\fP shareList, Bool direct)"
.br
.ti -1c
.RI "\fBvoid\fP \fBglXDestroyContext\fP (Display *dpy, \fBGLXContext\fP ctx)"
.br
.ti -1c
.RI "Bool \fBglXMakeCurrent\fP (Display *dpy, \fBGLXDrawable\fP drawable, \fBGLXContext\fP ctx)"
.br
.ti -1c
.RI "\fBvoid\fP \fBglXCopyContext\fP (Display *dpy, \fBGLXContext\fP \fBsrc\fP, \fBGLXContext\fP \fBdst\fP, unsigned long \fBmask\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBglXSwapBuffers\fP (Display *dpy, \fBGLXDrawable\fP drawable)"
.br
.ti -1c
.RI "\fBGLXPixmap\fP \fBglXCreateGLXPixmap\fP (Display *dpy, XVisualInfo *visual, Pixmap pixmap)"
.br
.ti -1c
.RI "\fBvoid\fP \fBglXDestroyGLXPixmap\fP (Display *dpy, \fBGLXPixmap\fP pixmap)"
.br
.ti -1c
.RI "Bool \fBglXQueryExtension\fP (Display *dpy, int *errorb, int *\fBevent\fP)"
.br
.ti -1c
.RI "Bool \fBglXQueryVersion\fP (Display *dpy, int *maj, int *min)"
.br
.ti -1c
.RI "Bool \fBglXIsDirect\fP (Display *dpy, \fBGLXContext\fP ctx)"
.br
.ti -1c
.RI "int \fBglXGetConfig\fP (Display *dpy, XVisualInfo *visual, int attrib, int *\fBvalue\fP)"
.br
.ti -1c
.RI "\fBGLXContext\fP \fBglXGetCurrentContext\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBGLXDrawable\fP \fBglXGetCurrentDrawable\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBglXWaitGL\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBglXWaitX\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBglXUseXFont\fP (Font font, int \fBfirst\fP, int \fBcount\fP, int list)"
.br
.ti -1c
.RI "const char * \fBglXQueryExtensionsString\fP (Display *dpy, int screen)"
.br
.ti -1c
.RI "const char * \fBglXQueryServerString\fP (Display *dpy, int screen, int \fBname\fP)"
.br
.ti -1c
.RI "const char * \fBglXGetClientString\fP (Display *dpy, int \fBname\fP)"
.br
.ti -1c
.RI "Display * \fBglXGetCurrentDisplay\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBGLXFBConfig\fP * \fBglXChooseFBConfig\fP (Display *dpy, int screen, const int *attribList, int *nitems)"
.br
.ti -1c
.RI "int \fBglXGetFBConfigAttrib\fP (Display *dpy, \fBGLXFBConfig\fP config, int attribute, int *\fBvalue\fP)"
.br
.ti -1c
.RI "\fBGLXFBConfig\fP * \fBglXGetFBConfigs\fP (Display *dpy, int screen, int *nelements)"
.br
.ti -1c
.RI "XVisualInfo * \fBglXGetVisualFromFBConfig\fP (Display *dpy, \fBGLXFBConfig\fP config)"
.br
.ti -1c
.RI "\fBGLXWindow\fP \fBglXCreateWindow\fP (Display *dpy, \fBGLXFBConfig\fP config, Window win, const int *attribList)"
.br
.ti -1c
.RI "\fBvoid\fP \fBglXDestroyWindow\fP (Display *dpy, \fBGLXWindow\fP window)"
.br
.ti -1c
.RI "\fBGLXPixmap\fP \fBglXCreatePixmap\fP (Display *dpy, \fBGLXFBConfig\fP config, Pixmap pixmap, const int *attribList)"
.br
.ti -1c
.RI "\fBvoid\fP \fBglXDestroyPixmap\fP (Display *dpy, \fBGLXPixmap\fP pixmap)"
.br
.ti -1c
.RI "\fBGLXPbuffer\fP \fBglXCreatePbuffer\fP (Display *dpy, \fBGLXFBConfig\fP config, const int *attribList)"
.br
.ti -1c
.RI "\fBvoid\fP \fBglXDestroyPbuffer\fP (Display *dpy, \fBGLXPbuffer\fP pbuf)"
.br
.ti -1c
.RI "\fBvoid\fP \fBglXQueryDrawable\fP (Display *dpy, \fBGLXDrawable\fP draw, int attribute, unsigned int *\fBvalue\fP)"
.br
.ti -1c
.RI "\fBGLXContext\fP \fBglXCreateNewContext\fP (Display *dpy, \fBGLXFBConfig\fP config, int renderType, \fBGLXContext\fP shareList, Bool direct)"
.br
.ti -1c
.RI "Bool \fBglXMakeContextCurrent\fP (Display *dpy, \fBGLXDrawable\fP draw, \fBGLXDrawable\fP read, \fBGLXContext\fP ctx)"
.br
.ti -1c
.RI "\fBGLXDrawable\fP \fBglXGetCurrentReadDrawable\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "int \fBglXQueryContext\fP (Display *dpy, \fBGLXContext\fP ctx, int attribute, int *\fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBglXSelectEvent\fP (Display *dpy, \fBGLXDrawable\fP drawable, unsigned long \fBmask\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBglXGetSelectedEvent\fP (Display *dpy, \fBGLXDrawable\fP drawable, unsigned long *\fBmask\fP)"
.br
.ti -1c
.RI "\fB__GLXextFuncPtr\fP \fBglXGetProcAddressARB\fP (const \fBGLubyte\fP *)"
.br
.ti -1c
.RI "\fBvoid\fP * \fBglXAllocateMemoryNV\fP (\fBGLsizei\fP \fBsize\fP, \fBGLfloat\fP readfreq, \fBGLfloat\fP writefreq, \fBGLfloat\fP priority)"
.br
.ti -1c
.RI "\fBvoid\fP \fBglXFreeMemoryNV\fP (\fBGLvoid\fP *\fBpointer\fP)"
.br
.ti -1c
.RI "Bool \fBglXBindTexImageARB\fP (Display *dpy, \fBGLXPbuffer\fP pbuffer, int \fBbuffer\fP)"
.br
.ti -1c
.RI "Bool \fBglXReleaseTexImageARB\fP (Display *dpy, \fBGLXPbuffer\fP pbuffer, int \fBbuffer\fP)"
.br
.ti -1c
.RI "Bool \fBglXDrawableAttribARB\fP (Display *dpy, \fBGLXDrawable\fP draw, const int *attribList)"
.br
.ti -1c
.RI "int \fBglXGetFrameUsageMESA\fP (Display *dpy, \fBGLXDrawable\fP drawable, float *\fBusage\fP)"
.br
.ti -1c
.RI "int \fBglXBeginFrameTrackingMESA\fP (Display *dpy, \fBGLXDrawable\fP drawable)"
.br
.ti -1c
.RI "int \fBglXEndFrameTrackingMESA\fP (Display *dpy, \fBGLXDrawable\fP drawable)"
.br
.ti -1c
.RI "int \fBglXQueryFrameTrackingMESA\fP (Display *dpy, \fBGLXDrawable\fP drawable, int64_t *swapCount, int64_t *missedFrames, float *lastMissedUsage)"
.br
.ti -1c
.RI "int \fBglXSwapIntervalMESA\fP (unsigned int interval)"
.br
.ti -1c
.RI "int \fBglXGetSwapIntervalMESA\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBglXBindTexImageEXT\fP (Display *dpy, \fBGLXDrawable\fP drawable, int \fBbuffer\fP, const int *attrib_list)"
.br
.ti -1c
.RI "\fBvoid\fP \fBglXReleaseTexImageEXT\fP (Display *dpy, \fBGLXDrawable\fP drawable, int \fBbuffer\fP)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBvoid\fP(*)(\fBvoid\fP) \fBglXGetProcAddress\fP (const \fBGLubyte\fP *procname)"
.br
.in -1c
.SH "Documentation des macros"
.PP 
.SS "#define __GLX_NUMBER_EVENTS   17"

.PP
Définition à la ligne 198 du fichier glx\&.h\&.
.SS "#define GLX_ACCUM_ALPHA_SIZE   17"

.PP
Définition à la ligne 86 du fichier glx\&.h\&.
.SS "#define GLX_ACCUM_BLUE_SIZE   16"

.PP
Définition à la ligne 85 du fichier glx\&.h\&.
.SS "#define GLX_ACCUM_BUFFER_BIT   0x00000080"

.PP
Définition à la ligne 131 du fichier glx\&.h\&.
.SS "#define GLX_ACCUM_GREEN_SIZE   15"

.PP
Définition à la ligne 84 du fichier glx\&.h\&.
.SS "#define GLX_ACCUM_RED_SIZE   14"

.PP
Définition à la ligne 83 du fichier glx\&.h\&.
.SS "#define GLX_ALPHA_SIZE   11"

.PP
Définition à la ligne 80 du fichier glx\&.h\&.
.SS "#define GLX_ARB_get_proc_address   1"

.PP
Définition à la ligne 328 du fichier glx\&.h\&.
.SS "#define GLX_ARB_render_texture   1"

.PP
Définition à la ligne 375 du fichier glx\&.h\&.
.SS "#define GLX_AUX0_EXT   0x20E2"

.PP
Définition à la ligne 467 du fichier glx\&.h\&.
.SS "#define GLX_AUX1_EXT   0x20E3"

.PP
Définition à la ligne 468 du fichier glx\&.h\&.
.SS "#define GLX_AUX2_EXT   0x20E4"

.PP
Définition à la ligne 469 du fichier glx\&.h\&.
.SS "#define GLX_AUX3_EXT   0x20E5"

.PP
Définition à la ligne 470 du fichier glx\&.h\&.
.SS "#define GLX_AUX4_EXT   0x20E6"

.PP
Définition à la ligne 471 du fichier glx\&.h\&.
.SS "#define GLX_AUX5_EXT   0x20E7"

.PP
Définition à la ligne 472 du fichier glx\&.h\&.
.SS "#define GLX_AUX6_EXT   0x20E8"

.PP
Définition à la ligne 473 du fichier glx\&.h\&.
.SS "#define GLX_AUX7_EXT   0x20E9"

.PP
Définition à la ligne 474 du fichier glx\&.h\&.
.SS "#define GLX_AUX8_EXT   0x20EA"

.PP
Définition à la ligne 475 du fichier glx\&.h\&.
.SS "#define GLX_AUX9_EXT   0x20EB"

.PP
Définition à la ligne 476 du fichier glx\&.h\&.
.SS "#define GLX_AUX_BUFFERS   7"

.PP
Définition à la ligne 76 du fichier glx\&.h\&.
.SS "#define GLX_AUX_BUFFERS_BIT   0x00000010"

.PP
Définition à la ligne 124 du fichier glx\&.h\&.
.SS "#define GLX_BACK_EXT   \fBGLX_BACK_LEFT_EXT\fP"

.PP
Définition à la ligne 466 du fichier glx\&.h\&.
.SS "#define GLX_BACK_LEFT_BUFFER_BIT   0x00000004"

.PP
Définition à la ligne 127 du fichier glx\&.h\&.
.SS "#define GLX_BACK_LEFT_EXT   0x20E0"

.PP
Définition à la ligne 463 du fichier glx\&.h\&.
.SS "#define GLX_BACK_RIGHT_BUFFER_BIT   0x00000008"

.PP
Définition à la ligne 128 du fichier glx\&.h\&.
.SS "#define GLX_BACK_RIGHT_EXT   0x20E1"

.PP
Définition à la ligne 464 du fichier glx\&.h\&.
.SS "#define GLX_BAD_ATTRIBUTE   2"

.PP
Définition à la ligne 93 du fichier glx\&.h\&.
.SS "#define GLX_BAD_CONTEXT   5"

.PP
Définition à la ligne 96 du fichier glx\&.h\&.
.SS "#define GLX_BAD_ENUM   7"

.PP
Définition à la ligne 98 du fichier glx\&.h\&.
.SS "#define GLX_BAD_SCREEN   1"

.PP
Définition à la ligne 92 du fichier glx\&.h\&.
.SS "#define GLX_BAD_VALUE   6"

.PP
Définition à la ligne 97 du fichier glx\&.h\&.
.SS "#define GLX_BAD_VISUAL   4"

.PP
Définition à la ligne 95 du fichier glx\&.h\&.
.SS "#define GLX_BIND_TO_MIPMAP_TEXTURE_EXT   0x20D2"

.PP
Définition à la ligne 441 du fichier glx\&.h\&.
.SS "#define GLX_BIND_TO_TEXTURE_RGB_EXT   0x20D0"

.PP
Définition à la ligne 439 du fichier glx\&.h\&.
.SS "#define GLX_BIND_TO_TEXTURE_RGBA_EXT   0x20D1"

.PP
Définition à la ligne 440 du fichier glx\&.h\&.
.SS "#define GLX_BIND_TO_TEXTURE_TARGETS_EXT   0x20D3"

.PP
Définition à la ligne 442 du fichier glx\&.h\&.
.SS "#define GLX_BLUE_SIZE   10"

.PP
Définition à la ligne 79 du fichier glx\&.h\&.
.SS "#define GLX_BUFFER_SIZE   2"

.PP
Définition à la ligne 71 du fichier glx\&.h\&.
.SS "#define GLX_BufferSwapComplete   1"

.PP
Définition à la ligne 196 du fichier glx\&.h\&.
.SS "#define GLX_COLOR_INDEX_BIT   0x00000002"

.PP
Définition à la ligne 166 du fichier glx\&.h\&.
.SS "#define GLX_COLOR_INDEX_TYPE   0x8015"

.PP
Définition à la ligne 150 du fichier glx\&.h\&.
.SS "#define GLX_CONFIG_CAVEAT   0x20"

.PP
Définition à la ligne 112 du fichier glx\&.h\&.
.SS "#define GLX_DAMAGED   0x8020"

.PP
Définition à la ligne 159 du fichier glx\&.h\&.
.SS "#define GLX_DEPTH_BUFFER_BIT   0x00000020"

.PP
Définition à la ligne 129 du fichier glx\&.h\&.
.SS "#define GLX_DEPTH_SIZE   12"

.PP
Définition à la ligne 81 du fichier glx\&.h\&.
.SS "#define GLX_DIRECT_COLOR   0x8003"

.PP
Définition à la ligne 135 du fichier glx\&.h\&.
.SS "#define GLX_DONT_CARE   0xFFFFFFFF"

.PP
Définition à la ligne 113 du fichier glx\&.h\&.
.SS "#define GLX_DOUBLEBUFFER   5"

.PP
Définition à la ligne 74 du fichier glx\&.h\&.
.SS "#define GLX_DRAWABLE_TYPE   0x8010"

.PP
Définition à la ligne 145 du fichier glx\&.h\&.
.SS "#define GLX_EVENT_MASK   0x801F"

.PP
Définition à la ligne 158 du fichier glx\&.h\&.
.SS "#define GLX_EXT_texture_from_pixmap   1"

.PP
Définition à la ligne 437 du fichier glx\&.h\&.
.SS "#define GLX_EXTENSION_NAME   'GLX'"

.PP
Définition à la ligne 63 du fichier glx\&.h\&.
.SS "#define GLX_EXTENSIONS   3"

.PP
Définition à la ligne 106 du fichier glx\&.h\&.
.SS "#define GLX_FBCONFIG_ID   0x8013"

.PP
Définition à la ligne 148 du fichier glx\&.h\&.
.SS "#define GLX_FLOAT_COMPONENTS_NV   0x20B0"

.PP
Définition à la ligne 390 du fichier glx\&.h\&.
.SS "#define GLX_FRONT_EXT   \fBGLX_FRONT_LEFT_EXT\fP"

.PP
Définition à la ligne 465 du fichier glx\&.h\&.
.SS "#define GLX_FRONT_LEFT_BUFFER_BIT   0x00000001"

.PP
Définition à la ligne 125 du fichier glx\&.h\&.
.SS "#define GLX_FRONT_LEFT_EXT   0x20DE"

.PP
Définition à la ligne 461 du fichier glx\&.h\&.
.SS "#define GLX_FRONT_RIGHT_BUFFER_BIT   0x00000002"

.PP
Définition à la ligne 126 du fichier glx\&.h\&.
.SS "#define GLX_FRONT_RIGHT_EXT   0x20DF"

.PP
Définition à la ligne 462 du fichier glx\&.h\&.
.SS "#define GLX_GRAY_SCALE   0x8006"

.PP
Définition à la ligne 138 du fichier glx\&.h\&.
.SS "#define GLX_GREEN_SIZE   9"

.PP
Définition à la ligne 78 du fichier glx\&.h\&.
.SS "#define GLX_HEIGHT   0x801E"

.PP
Définition à la ligne 157 du fichier glx\&.h\&.
.SS "#define GLX_LARGEST_PBUFFER   0x801C"

.PP
Définition à la ligne 155 du fichier glx\&.h\&.
.SS "#define GLX_LEVEL   3"

.PP
Définition à la ligne 72 du fichier glx\&.h\&.
.SS "#define GLX_MAX_PBUFFER_HEIGHT   0x8017"

.PP
Définition à la ligne 152 du fichier glx\&.h\&.
.SS "#define GLX_MAX_PBUFFER_PIXELS   0x8018"

.PP
Définition à la ligne 153 du fichier glx\&.h\&.
.SS "#define GLX_MAX_PBUFFER_WIDTH   0x8016"

.PP
Définition à la ligne 151 du fichier glx\&.h\&.
.SS "#define GLX_MESA_swap_control   1"

.PP
Définition à la ligne 420 du fichier glx\&.h\&.
.SS "#define GLX_MESA_swap_frame_usage   1"

.PP
Définition à la ligne 400 du fichier glx\&.h\&.
.SS "#define GLX_MIPMAP_TEXTURE_EXT   0x20D7"

.PP
Définition à la ligne 447 du fichier glx\&.h\&.
.SS "#define GLX_NO_EXTENSION   3"

.PP
Définition à la ligne 94 du fichier glx\&.h\&.
.SS "#define GLX_NON_CONFORMANT_CONFIG   0x800D"

.PP
Définition à la ligne 144 du fichier glx\&.h\&.
.SS "#define GLX_NONE   0x8000"

.PP
Définition à la ligne 132 du fichier glx\&.h\&.
.SS "#define GLX_NV_float_buffer   1"

.PP
Définition à la ligne 388 du fichier glx\&.h\&.
.SS "#define GLX_NV_vertex_array_range"
The following aren't in glxext\&.h yet\&. 
.PP
Définition à la ligne 360 du fichier glx\&.h\&.
.SS "#define GLX_PBUFFER   0x8023"

.PP
Définition à la ligne 162 du fichier glx\&.h\&.
.SS "#define GLX_PBUFFER_BIT   0x00000004"

.PP
Définition à la ligne 123 du fichier glx\&.h\&.
.SS "#define GLX_PBUFFER_CLOBBER_MASK   0x08000000"

.PP
Définition à la ligne 167 du fichier glx\&.h\&.
.SS "#define GLX_PBUFFER_HEIGHT   0x8040"

.PP
Définition à la ligne 163 du fichier glx\&.h\&.
.SS "#define GLX_PBUFFER_WIDTH   0x8041"

.PP
Définition à la ligne 164 du fichier glx\&.h\&.
.SS "#define GLX_PbufferClobber   0"

.PP
Définition à la ligne 195 du fichier glx\&.h\&.
.SS "#define GLX_PIXMAP_BIT   0x00000002"

.PP
Définition à la ligne 122 du fichier glx\&.h\&.
.SS "#define GLX_PRESERVED_CONTENTS   0x801B"

.PP
Définition à la ligne 154 du fichier glx\&.h\&.
.SS "#define GLX_PSEUDO_COLOR   0x8004"

.PP
Définition à la ligne 136 du fichier glx\&.h\&.
.SS "#define GLX_RED_SIZE   8"

.PP
Définition à la ligne 77 du fichier glx\&.h\&.
.SS "#define GLX_RENDER_TYPE   0x8011"

.PP
Définition à la ligne 146 du fichier glx\&.h\&.
.SS "#define GLX_RGBA   4"

.PP
Définition à la ligne 73 du fichier glx\&.h\&.
.SS "#define GLX_RGBA_BIT   0x00000001"

.PP
Définition à la ligne 165 du fichier glx\&.h\&.
.SS "#define GLX_RGBA_TYPE   0x8014"

.PP
Définition à la ligne 149 du fichier glx\&.h\&.
.SS "#define GLX_SAMPLE_BUFFERS   0x186a0 /*100000*/"

.PP
Définition à la ligne 173 du fichier glx\&.h\&.
.SS "#define GLX_SAMPLES   0x186a1 /*100001*/"

.PP
Définition à la ligne 174 du fichier glx\&.h\&.
.SS "#define GLX_SAVED   0x8021"

.PP
Définition à la ligne 160 du fichier glx\&.h\&.
.SS "#define GLX_SCREEN   0x800C"

.PP
Définition à la ligne 143 du fichier glx\&.h\&.
.SS "#define GLX_SLOW_CONFIG   0x8001"

.PP
Définition à la ligne 133 du fichier glx\&.h\&.
.SS "#define GLX_STATIC_COLOR   0x8005"

.PP
Définition à la ligne 137 du fichier glx\&.h\&.
.SS "#define GLX_STATIC_GRAY   0x8007"

.PP
Définition à la ligne 139 du fichier glx\&.h\&.
.SS "#define GLX_STENCIL_BUFFER_BIT   0x00000040"

.PP
Définition à la ligne 130 du fichier glx\&.h\&.
.SS "#define GLX_STENCIL_SIZE   13"

.PP
Définition à la ligne 82 du fichier glx\&.h\&.
.SS "#define GLX_STEREO   6"

.PP
Définition à la ligne 75 du fichier glx\&.h\&.
.SS "#define GLX_TEXTURE_1D_BIT_EXT   0x00000001"

.PP
Définition à la ligne 453 du fichier glx\&.h\&.
.SS "#define GLX_TEXTURE_1D_EXT   0x20DB"

.PP
Définition à la ligne 457 du fichier glx\&.h\&.
.SS "#define GLX_TEXTURE_2D_BIT_EXT   0x00000002"

.PP
Définition à la ligne 454 du fichier glx\&.h\&.
.SS "#define GLX_TEXTURE_2D_EXT   0x20DC"

.PP
Définition à la ligne 458 du fichier glx\&.h\&.
.SS "#define GLX_TEXTURE_FORMAT_EXT   0x20D5"

.PP
Définition à la ligne 445 du fichier glx\&.h\&.
.SS "#define GLX_TEXTURE_FORMAT_NONE_EXT   0x20D8"

.PP
Définition à la ligne 449 du fichier glx\&.h\&.
.SS "#define GLX_TEXTURE_FORMAT_RGB_EXT   0x20D9"

.PP
Définition à la ligne 450 du fichier glx\&.h\&.
.SS "#define GLX_TEXTURE_FORMAT_RGBA_EXT   0x20DA"

.PP
Définition à la ligne 451 du fichier glx\&.h\&.
.SS "#define GLX_TEXTURE_RECTANGLE_BIT_EXT   0x00000004"

.PP
Définition à la ligne 455 du fichier glx\&.h\&.
.SS "#define GLX_TEXTURE_RECTANGLE_EXT   0x20DD"

.PP
Définition à la ligne 459 du fichier glx\&.h\&.
.SS "#define GLX_TEXTURE_TARGET_EXT   0x20D6"

.PP
Définition à la ligne 446 du fichier glx\&.h\&.
.SS "#define GLX_TRANSPARENT_ALPHA_VALUE   0x28"

.PP
Définition à la ligne 120 du fichier glx\&.h\&.
.SS "#define GLX_TRANSPARENT_BLUE_VALUE   0x27"

.PP
Définition à la ligne 119 du fichier glx\&.h\&.
.SS "#define GLX_TRANSPARENT_GREEN_VALUE   0x26"

.PP
Définition à la ligne 118 du fichier glx\&.h\&.
.SS "#define GLX_TRANSPARENT_INDEX   0x8009"

.PP
Définition à la ligne 141 du fichier glx\&.h\&.
.SS "#define GLX_TRANSPARENT_INDEX_VALUE   0x24"

.PP
Définition à la ligne 116 du fichier glx\&.h\&.
.SS "#define GLX_TRANSPARENT_RED_VALUE   0x25"

.PP
Définition à la ligne 117 du fichier glx\&.h\&.
.SS "#define GLX_TRANSPARENT_RGB   0x8008"

.PP
Définition à la ligne 140 du fichier glx\&.h\&.
.SS "#define GLX_TRANSPARENT_TYPE   0x23"

.PP
Définition à la ligne 115 du fichier glx\&.h\&.
.SS "#define GLX_TRUE_COLOR   0x8002"

.PP
Définition à la ligne 134 du fichier glx\&.h\&.
.SS "#define GLX_USE_GL   1"

.PP
Définition à la ligne 70 du fichier glx\&.h\&.
.SS "#define GLX_VENDOR   1"

.PP
Définition à la ligne 104 du fichier glx\&.h\&.
.SS "#define GLX_VERSION   2"

.PP
Définition à la ligne 105 du fichier glx\&.h\&.
.SS "#define GLX_VERSION_1_1   1"

.PP
Définition à la ligne 58 du fichier glx\&.h\&.
.SS "#define GLX_VERSION_1_2   1"

.PP
Définition à la ligne 59 du fichier glx\&.h\&.
.SS "#define GLX_VERSION_1_3   1"

.PP
Définition à la ligne 60 du fichier glx\&.h\&.
.SS "#define GLX_VERSION_1_4   1"

.PP
Définition à la ligne 61 du fichier glx\&.h\&.
.SS "#define GLX_VISUAL_ID   0x800B"

.PP
Définition à la ligne 142 du fichier glx\&.h\&.
.SS "#define GLX_WIDTH   0x801D"

.PP
Définition à la ligne 156 du fichier glx\&.h\&.
.SS "#define GLX_WINDOW   0x8022"

.PP
Définition à la ligne 161 du fichier glx\&.h\&.
.SS "#define GLX_WINDOW_BIT   0x00000001"

.PP
Définition à la ligne 121 du fichier glx\&.h\&.
.SS "#define GLX_X_RENDERABLE   0x8012"

.PP
Définition à la ligne 147 du fichier glx\&.h\&.
.SS "#define GLX_X_VISUAL_TYPE   0x22"

.PP
Définition à la ligne 114 du fichier glx\&.h\&.
.SS "#define GLX_Y_INVERTED_EXT   0x20D4"

.PP
Définition à la ligne 443 du fichier glx\&.h\&.
.SH "Documentation des définitions de type"
.PP 
.SS "typedef \fBvoid\fP(* __GLXextFuncPtr)(\fBvoid\fP)"

.PP
Définition à la ligne 330 du fichier glx\&.h\&.
.SS "typedef struct __GLXcontextRec* \fBGLXContext\fP"

.PP
Définition à la ligne 178 du fichier glx\&.h\&.
.SS "typedef XID \fBGLXContextID\fP"

.PP
Définition à la ligne 184 du fichier glx\&.h\&.
.SS "typedef XID \fBGLXDrawable\fP"

.PP
Définition à la ligne 180 du fichier glx\&.h\&.
.SS "typedef union \fB__GLXEvent\fP  \fBGLXEvent\fP"

.SS "typedef struct __GLXFBConfigRec* \fBGLXFBConfig\fP"

.PP
Définition à la ligne 182 du fichier glx\&.h\&.
.SS "typedef XID \fBGLXFBConfigID\fP"

.PP
Définition à la ligne 183 du fichier glx\&.h\&.
.SS "typedef XID \fBGLXPbuffer\fP"

.PP
Définition à la ligne 186 du fichier glx\&.h\&.
.SS "typedef XID \fBGLXPixmap\fP"

.PP
Définition à la ligne 179 du fichier glx\&.h\&.
.SS "typedef XID \fBGLXWindow\fP"

.PP
Définition à la ligne 185 du fichier glx\&.h\&.
.SS "typedef \fBvoid\fP*( *  PFNGLXALLOCATEMEMORYNVPROC)(\fBGLsizei\fP \fBsize\fP, \fBGLfloat\fP readfreq, \fBGLfloat\fP writefreq, \fBGLfloat\fP priority)"

.PP
Définition à la ligne 364 du fichier glx\&.h\&.
.SS "typedef int(* PFNGLXBEGINFRAMETRACKINGMESAPROC)(Display *dpy, \fBGLXDrawable\fP drawable)"

.PP
Définition à la ligne 408 du fichier glx\&.h\&.
.SS "typedef \fBGLXFBConfig\fP*(*  PFNGLXCHOOSEFBCONFIGPROC)(Display *dpy, int screen, const int *attrib_list, int *nelements)"

.PP
Définition à la ligne 305 du fichier glx\&.h\&.
.SS "typedef \fBGLXContext\fP(*  PFNGLXCREATENEWCONTEXTPROC)(Display *dpy, \fBGLXFBConfig\fP config, int render_type, \fBGLXContext\fP share_list, Bool direct)"

.PP
Définition à la ligne 315 du fichier glx\&.h\&.
.SS "typedef \fBGLXPbuffer\fP(*  PFNGLXCREATEPBUFFERPROC)(Display *dpy, \fBGLXFBConfig\fP config, const int *attrib_list)"

.PP
Définition à la ligne 312 du fichier glx\&.h\&.
.SS "typedef \fBGLXPixmap\fP(*  PFNGLXCREATEPIXMAPPROC)(Display *dpy, \fBGLXFBConfig\fP config, Pixmap pixmap, const int *attrib_list)"

.PP
Définition à la ligne 310 du fichier glx\&.h\&.
.SS "typedef \fBGLXWindow\fP(*  PFNGLXCREATEWINDOWPROC)(Display *dpy, \fBGLXFBConfig\fP config, Window win, const int *attrib_list)"

.PP
Définition à la ligne 308 du fichier glx\&.h\&.
.SS "typedef \fBvoid\fP(*  PFNGLXDESTROYPBUFFERPROC)(Display *dpy, \fBGLXPbuffer\fP pbuf)"

.PP
Définition à la ligne 313 du fichier glx\&.h\&.
.SS "typedef \fBvoid\fP(*  PFNGLXDESTROYPIXMAPPROC)(Display *dpy, \fBGLXPixmap\fP pixmap)"

.PP
Définition à la ligne 311 du fichier glx\&.h\&.
.SS "typedef \fBvoid\fP(*  PFNGLXDESTROYWINDOWPROC)(Display *dpy, \fBGLXWindow\fP win)"

.PP
Définition à la ligne 309 du fichier glx\&.h\&.
.SS "typedef int(* PFNGLXENDFRAMETRACKINGMESAPROC)(Display *dpy, \fBGLXDrawable\fP drawable)"

.PP
Définition à la ligne 409 du fichier glx\&.h\&.
.SS "typedef \fBvoid\fP( *  PFNGLXFREEMEMORYNVPROC)(\fBGLvoid\fP *\fBpointer\fP)"

.PP
Définition à la ligne 365 du fichier glx\&.h\&.
.SS "typedef Display*(*  PFNGLXGETCURRENTDISPLAYPROC)(\fBvoid\fP)"

.PP
Définition à la ligne 318 du fichier glx\&.h\&.
.SS "typedef \fBGLXDrawable\fP(*  PFNGLXGETCURRENTREADDRAWABLEPROC)(\fBvoid\fP)"

.PP
Définition à la ligne 317 du fichier glx\&.h\&.
.SS "typedef int(*  PFNGLXGETFBCONFIGATTRIBPROC)(Display *dpy, \fBGLXFBConfig\fP config, int attribute, int *\fBvalue\fP)"

.PP
Définition à la ligne 306 du fichier glx\&.h\&.
.SS "typedef \fBGLXFBConfig\fP*(*  PFNGLXGETFBCONFIGSPROC)(Display *dpy, int screen, int *nelements)"

.PP
Définition à la ligne 304 du fichier glx\&.h\&.
.SS "typedef int(* PFNGLXGETFRAMEUSAGEMESAPROC)(Display *dpy, \fBGLXDrawable\fP drawable, float *\fBusage\fP)"

.PP
Définition à la ligne 407 du fichier glx\&.h\&.
.SS "typedef \fB__GLXextFuncPtr\fP(*  PFNGLXGETPROCADDRESSPROC)(const \fBGLubyte\fP *procName)"

.PP
Définition à la ligne 341 du fichier glx\&.h\&.
.SS "typedef \fBvoid\fP(*  PFNGLXGETSELECTEDEVENTPROC)(Display *dpy, \fBGLXDrawable\fP draw, unsigned long *event_mask)"

.PP
Définition à la ligne 321 du fichier glx\&.h\&.
.SS "typedef int(* PFNGLXGETSWAPINTERVALMESAPROC)(\fBvoid\fP)"

.PP
Définition à la ligne 426 du fichier glx\&.h\&.
.SS "typedef XVisualInfo*(*  PFNGLXGETVISUALFROMFBCONFIGPROC)(Display *dpy, \fBGLXFBConfig\fP config)"

.PP
Définition à la ligne 307 du fichier glx\&.h\&.
.SS "typedef Bool(*  PFNGLXMAKECONTEXTCURRENTPROC)(Display *dpy, \fBGLXDrawable\fP draw, \fBGLXDrawable\fP read, \fBGLXContext\fP ctx)"

.PP
Définition à la ligne 316 du fichier glx\&.h\&.
.SS "typedef int(*  PFNGLXQUERYCONTEXTPROC)(Display *dpy, \fBGLXContext\fP ctx, int attribute, int *\fBvalue\fP)"

.PP
Définition à la ligne 319 du fichier glx\&.h\&.
.SS "typedef \fBvoid\fP(*  PFNGLXQUERYDRAWABLEPROC)(Display *dpy, \fBGLXDrawable\fP draw, int attribute, unsigned int *\fBvalue\fP)"

.PP
Définition à la ligne 314 du fichier glx\&.h\&.
.SS "typedef int(* PFNGLXQUERYFRAMETRACKINGMESAPROC)(Display *dpy, \fBGLXDrawable\fP drawable, int64_t *swapCount, int64_t *missedFrames, float *lastMissedUsage)"

.PP
Définition à la ligne 410 du fichier glx\&.h\&.
.SS "typedef \fBvoid\fP(*  PFNGLXSELECTEVENTPROC)(Display *dpy, \fBGLXDrawable\fP draw, unsigned long event_mask)"

.PP
Définition à la ligne 320 du fichier glx\&.h\&.
.SS "typedef int(* PFNGLXSWAPINTERVALMESAPROC)(unsigned int interval)"

.PP
Définition à la ligne 425 du fichier glx\&.h\&.
.SH "Documentation des fonctions"
.PP 
.SS "\fBvoid\fP* glXAllocateMemoryNV (\fBGLsizei\fPsize, \fBGLfloat\fPreadfreq, \fBGLfloat\fPwritefreq, \fBGLfloat\fPpriority)"

.SS "int glXBeginFrameTrackingMESA (Display *dpy, \fBGLXDrawable\fPdrawable)"

.SS "Bool glXBindTexImageARB (Display *dpy, \fBGLXPbuffer\fPpbuffer, intbuffer)"

.SS "\fBvoid\fP glXBindTexImageEXT (Display *dpy, \fBGLXDrawable\fPdrawable, intbuffer, const int *attrib_list)"

.SS "\fBGLXFBConfig\fP* glXChooseFBConfig (Display *dpy, intscreen, const int *attribList, int *nitems)"

.SS "XVisualInfo* glXChooseVisual (Display *dpy, intscreen, int *attribList)"

.SS "\fBvoid\fP glXCopyContext (Display *dpy, \fBGLXContext\fPsrc, \fBGLXContext\fPdst, unsigned longmask)"

.SS "\fBGLXContext\fP glXCreateContext (Display *dpy, XVisualInfo *vis, \fBGLXContext\fPshareList, Booldirect)"

.SS "\fBGLXPixmap\fP glXCreateGLXPixmap (Display *dpy, XVisualInfo *visual, Pixmappixmap)"

.SS "\fBGLXContext\fP glXCreateNewContext (Display *dpy, \fBGLXFBConfig\fPconfig, intrenderType, \fBGLXContext\fPshareList, Booldirect)"

.SS "\fBGLXPbuffer\fP glXCreatePbuffer (Display *dpy, \fBGLXFBConfig\fPconfig, const int *attribList)"

.SS "\fBGLXPixmap\fP glXCreatePixmap (Display *dpy, \fBGLXFBConfig\fPconfig, Pixmappixmap, const int *attribList)"

.SS "\fBGLXWindow\fP glXCreateWindow (Display *dpy, \fBGLXFBConfig\fPconfig, Windowwin, const int *attribList)"

.SS "\fBvoid\fP glXDestroyContext (Display *dpy, \fBGLXContext\fPctx)"

.SS "\fBvoid\fP glXDestroyGLXPixmap (Display *dpy, \fBGLXPixmap\fPpixmap)"

.SS "\fBvoid\fP glXDestroyPbuffer (Display *dpy, \fBGLXPbuffer\fPpbuf)"

.SS "\fBvoid\fP glXDestroyPixmap (Display *dpy, \fBGLXPixmap\fPpixmap)"

.SS "\fBvoid\fP glXDestroyWindow (Display *dpy, \fBGLXWindow\fPwindow)"

.SS "Bool glXDrawableAttribARB (Display *dpy, \fBGLXDrawable\fPdraw, const int *attribList)"

.SS "int glXEndFrameTrackingMESA (Display *dpy, \fBGLXDrawable\fPdrawable)"

.SS "\fBvoid\fP glXFreeMemoryNV (\fBGLvoid\fP *pointer)"

.SS "const char* glXGetClientString (Display *dpy, intname)"

.SS "int glXGetConfig (Display *dpy, XVisualInfo *visual, intattrib, int *value)"

.SS "\fBGLXContext\fP glXGetCurrentContext (\fBvoid\fP)"

.SS "Display* glXGetCurrentDisplay (\fBvoid\fP)"

.SS "\fBGLXDrawable\fP glXGetCurrentDrawable (\fBvoid\fP)"

.SS "\fBGLXDrawable\fP glXGetCurrentReadDrawable (\fBvoid\fP)"

.SS "int glXGetFBConfigAttrib (Display *dpy, \fBGLXFBConfig\fPconfig, intattribute, int *value)"

.SS "\fBGLXFBConfig\fP* glXGetFBConfigs (Display *dpy, intscreen, int *nelements)"

.SS "int glXGetFrameUsageMESA (Display *dpy, \fBGLXDrawable\fPdrawable, float *usage)"

.SS "\fB__GLXextFuncPtr\fP glXGetProcAddressARB (const \fBGLubyte\fP *)"

.SS "\fBvoid\fP glXGetSelectedEvent (Display *dpy, \fBGLXDrawable\fPdrawable, unsigned long *mask)"

.SS "int glXGetSwapIntervalMESA (\fBvoid\fP)"

.SS "XVisualInfo* glXGetVisualFromFBConfig (Display *dpy, \fBGLXFBConfig\fPconfig)"

.SS "Bool glXIsDirect (Display *dpy, \fBGLXContext\fPctx)"

.SS "Bool glXMakeContextCurrent (Display *dpy, \fBGLXDrawable\fPdraw, \fBGLXDrawable\fPread, \fBGLXContext\fPctx)"

.SS "Bool glXMakeCurrent (Display *dpy, \fBGLXDrawable\fPdrawable, \fBGLXContext\fPctx)"

.SS "int glXQueryContext (Display *dpy, \fBGLXContext\fPctx, intattribute, int *value)"

.SS "\fBvoid\fP glXQueryDrawable (Display *dpy, \fBGLXDrawable\fPdraw, intattribute, unsigned int *value)"

.SS "Bool glXQueryExtension (Display *dpy, int *errorb, int *event)"

.SS "const char* glXQueryExtensionsString (Display *dpy, intscreen)"

.SS "int glXQueryFrameTrackingMESA (Display *dpy, \fBGLXDrawable\fPdrawable, int64_t *swapCount, int64_t *missedFrames, float *lastMissedUsage)"

.SS "const char* glXQueryServerString (Display *dpy, intscreen, intname)"

.SS "Bool glXQueryVersion (Display *dpy, int *maj, int *min)"

.SS "Bool glXReleaseTexImageARB (Display *dpy, \fBGLXPbuffer\fPpbuffer, intbuffer)"

.SS "\fBvoid\fP glXReleaseTexImageEXT (Display *dpy, \fBGLXDrawable\fPdrawable, intbuffer)"

.SS "\fBvoid\fP glXSelectEvent (Display *dpy, \fBGLXDrawable\fPdrawable, unsigned longmask)"

.SS "\fBvoid\fP glXSwapBuffers (Display *dpy, \fBGLXDrawable\fPdrawable)"

.SS "int glXSwapIntervalMESA (unsigned intinterval)"

.SS "\fBvoid\fP glXUseXFont (Fontfont, intfirst, intcount, intlist)"

.SS "\fBvoid\fP glXWaitGL (\fBvoid\fP)"

.SS "\fBvoid\fP glXWaitX (\fBvoid\fP)"

.SH "Documentation des variables"
.PP 
.SS "\fBvoid\fP(*)( \fBvoid\fP ) glXGetProcAddress(const \fBGLubyte\fP *procname)"

.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour Tetris à partir du code source\&.
