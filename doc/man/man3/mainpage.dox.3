.TH "/home/cj/workspace/Tetris/src/mainpage.dox" 3 "Vendredi Février 21 2014" "Version alpha" "Tetris" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/cj/workspace/Tetris/src/mainpage.dox \- 
.SH SYNOPSIS
.br
.PP
.SS "Fonctions"

.in +1c
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP \fBde\fP le 
.br
consulter ce README sur le web 
.br
pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé 
.br
implémentées et testées 
.br
Tous les déplacements sont \fBy\fP 
.br
compris la « chute nette 
.br
» avec la barre d espace La 
.br
gestion du score est 
.br
également avec des niveaux 
.br
plus rapides au fur et 
.br
à mesure que l on détruit 
.br
des lignes Lorsque le jeu est 
.br
on affiche « Game Over le 
.br
score obtenu et le niveau 
.br
atteint Choix pour la rotation 
.br
nous ne nous basons pas sur le 
.br
traitement \fBs\fPéparé \fBde\fP chaque 
.br
état \fBde\fP la pièce Nous 
.br
calculons simplement la 
.br
nouvelle position à partir \fBde\fP 
.br
la \fBmatrice\fP \fBde\fP la pièce et du 
.br
sens \fBde\fP rotation Pour faire 
.br
tourner une pièce vers la il 
.br
pour chaque élément \fBde\fP la \fBde\fP 
.br
modifier son ordonnée en son 
.br
abscisse et son abscisse en la 
.br
taille \fBde\fP la \fBmatrice\fP moins 
.br
moins son ordonnée Pour la 
.br
rotation vers la \fBc\fP est l 
.br
inverse Ce qui nous donne plus 
.br
plutô\fBt\fP que \fBde\fP faire une 
.br
disjonction \fBde\fP \fBcas\fP pour chaque \fBsens\fP (Top, Right, Bottom, Left) \fBde\fP chaque pièce(I"
.br
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP de le 
.br
consulter ce README sur le web 
.br
pour plus de \fBZ1\fP et Z2 ont é\fBt\fPé 
.br
implémentées et testées 
.br
Tous les déplacements sont \fBy\fP 
.br
compris la « chute nette 
.br
» avec la barre d espace La 
.br
gestion du score est 
.br
également avec des niveaux 
.br
plus rapides au fur et 
.br
à mesure que l on détruit 
.br
des lignes Lorsque le jeu est 
.br
on affiche « Game Over le 
.br
score obtenu et le niveau 
.br
atteint Choix pour la rotation 
.br
nous ne nous basons pas sur le 
.br
traitement \fBs\fPéparé de chaque 
.br
état de la pièce Nous 
.br
calculons simplement la 
.br
nouvelle position à partir de 
.br
la \fBmatrice\fP de la pièce et du 
.br
\fBsens\fP de rotation Pour faire 
.br
tourner une pièce vers la il 
.br
pour chaque élément de la de 
.br
modifier son ordonnée en son 
.br
abscisse et son abscisse en la 
.br
taille de la \fBmatrice\fP moins 
.br
moins son ordonnée Pour la 
.br
rotation vers la \fBc\fP est l 
.br
inverse Ce qui nous donne plus 
.br
plutô\fBt\fP que de faire une 
.br
disjonction de \fBcas\fP pour chaque 
.br
Z2 Nous avons ainsi deux \fBcas\fP 
.br
à \fBg\fPérer au lieu \fBde\fP (4×6-3, la pièce \fBO\fP étant'insensible'à la rotation)\&.Gé\fBn\fPération aléatoire des pièces Ayant du mal à cerner le but de la classe \fBCRandomizer\fP et comment l'utiliser"
.br
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP \fBde\fP le 
.br
consulter ce README sur le web 
.br
pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé 
.br
implémentées et testées 
.br
Tous les déplacements sont \fBy\fP 
.br
compris la « chute nette 
.br
» avec la barre d espace La 
.br
gestion du score est 
.br
également avec des niveaux 
.br
plus rapides au fur et 
.br
à mesure que l on détruit 
.br
des lignes Lorsque le jeu est 
.br
on affiche « Game Over le 
.br
score obtenu et le niveau 
.br
atteint Choix pour la rotation 
.br
nous ne nous basons pas sur le 
.br
traitement \fBs\fPéparé \fBde\fP chaque 
.br
état \fBde\fP la pièce Nous 
.br
calculons simplement la 
.br
nouvelle position à partir \fBde\fP 
.br
la \fBmatrice\fP \fBde\fP la pièce et du 
.br
\fBsens\fP \fBde\fP rotation Pour faire 
.br
tourner une pièce vers la il 
.br
pour chaque élément \fBde\fP la \fBde\fP 
.br
modifier son ordonnée en son 
.br
abscisse et son abscisse en la 
.br
taille \fBde\fP la \fBmatrice\fP moins 
.br
moins son ordonnée Pour la 
.br
rotation vers la \fBc\fP est l 
.br
inverse Ce qui nous donne plus 
.br
plutô\fBt\fP que \fBde\fP faire une 
.br
disjonction \fBde\fP \fBcas\fP pour chaque 
.br
Z2 Nous avons ainsi deux \fBcas\fP 
.br
à \fBg\fPérer au lieu nous avons 
.br
fait le choix d utiliser la 
.br
fonction \fBrand\fP () \fBde\fP C++\&.Nous \fBg\fPé\fBn\fPérons un nombre entre 0 et 6 associé arbitrairement à une pièce\&.Au niveau des couleurs nous avons aussi \fBg\fPé\fBn\fPé\fBr\fPé le taux \fBde\fP rouge"
.br
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP \fBde\fP le 
.br
consulter ce README sur le web 
.br
pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé 
.br
implémentées et testées 
.br
Tous les déplacements sont \fBy\fP 
.br
compris la « chute nette 
.br
» avec la barre d espace La 
.br
gestion du score est 
.br
également avec des niveaux 
.br
plus rapides au fur et 
.br
à mesure que l on détruit 
.br
des lignes Lorsque le jeu est 
.br
on affiche « Game Over le 
.br
score obtenu et le niveau 
.br
atteint Choix pour la rotation 
.br
nous ne nous basons pas sur le 
.br
traitement \fBs\fPéparé \fBde\fP chaque 
.br
état \fBde\fP la pièce Nous 
.br
calculons simplement la 
.br
nouvelle position à partir \fBde\fP 
.br
la \fBmatrice\fP \fBde\fP la pièce et du 
.br
\fBsens\fP \fBde\fP rotation Pour faire 
.br
tourner une pièce vers la il 
.br
pour chaque élément \fBde\fP la \fBde\fP 
.br
modifier son ordonnée en son 
.br
abscisse et son abscisse en la 
.br
taille \fBde\fP la \fBmatrice\fP moins 
.br
moins son ordonnée Pour la 
.br
rotation vers la \fBc\fP est l 
.br
inverse Ce qui nous donne plus 
.br
plutô\fBt\fP que \fBde\fP faire une 
.br
disjonction \fBde\fP \fBcas\fP pour chaque 
.br
Z2 Nous avons ainsi deux \fBcas\fP 
.br
à \fBg\fPérer au lieu nous avons 
.br
fait le choix d utiliser la 
.br
fonction vert et bleu aléatoirement 
.br
L inconvénient est que le 
.br
contraste entre la pièce et 
.br
le fond peut être un peu 
.br
faible Celà rajoute un peu \fBde\fP 
.br
difficulté au jeu Ce serait 
.br
intéressant d évaluer ce 
.br
contraste et regé\fBn\fPérer la 
.br
couleur \fBs\fP il est jugé trop 
.br
faible par l algorithme Dans 
.br
la grande majorité des la pièce 
.br
est tout \fBde\fP \fBm\fPême bien visible 
.br
pour tester la pièce lancer 
.br
la commande make testCTPiece 
.br
Pour tester la pièce lancer 
.br
la commande make testCL2Piece 
.br
Cette commande compile le 
.br
fichier \fBde\fP test et le lance 
.br
avec l argument no gui pour \fBn\fP 
.br
afficher que le \fBr\fPésultat des 
.br
tests en \fBmode\fP \fBconsole\fP Pour 
.br
tester l affichage en \fBmode\fP il 
.br
\fBsuffit\fP ensuite \fBde\fP lancer le 
.br
fichier \fBde\fP test sans \fBarguments\fP (`\&.\&./bin/testC?Piece\&.bin`en remplaçant évidemment le'?'par la pièce à tester)\&.`make testPiece`Lance tous les tests des pièces(testCTPiece"
.br
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP \fBde\fP le 
.br
consulter ce README sur le web 
.br
pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé 
.br
implémentées et testées 
.br
Tous les déplacements sont \fBy\fP 
.br
compris la « chute nette 
.br
» avec la barre d espace La 
.br
gestion du score est 
.br
également avec des niveaux 
.br
plus rapides au fur et 
.br
à mesure que l on détruit 
.br
des lignes Lorsque le jeu est 
.br
on affiche « Game Over le 
.br
score obtenu et le niveau 
.br
atteint Choix pour la rotation 
.br
nous ne nous basons pas sur le 
.br
traitement \fBs\fPéparé \fBde\fP chaque 
.br
état \fBde\fP la pièce Nous 
.br
calculons simplement la 
.br
nouvelle position à partir \fBde\fP 
.br
la \fBmatrice\fP \fBde\fP la pièce et du 
.br
\fBsens\fP \fBde\fP rotation Pour faire 
.br
tourner une pièce vers la il 
.br
pour chaque élément \fBde\fP la \fBde\fP 
.br
modifier son ordonnée en son 
.br
abscisse et son abscisse en la 
.br
taille \fBde\fP la \fBmatrice\fP moins 
.br
moins son ordonnée Pour la 
.br
rotation vers la \fBc\fP est l 
.br
inverse Ce qui nous donne plus 
.br
plutô\fBt\fP que \fBde\fP faire une 
.br
disjonction \fBde\fP \fBcas\fP pour chaque 
.br
Z2 Nous avons ainsi deux \fBcas\fP 
.br
à \fBg\fPérer au lieu nous avons 
.br
fait le choix d utiliser la 
.br
fonction vert et bleu aléatoirement 
.br
L inconvénient est que le 
.br
contraste entre la pièce et 
.br
le fond peut être un peu 
.br
faible Celà rajoute un peu \fBde\fP 
.br
difficulté au jeu Ce serait 
.br
intéressant d évaluer ce 
.br
contraste et regé\fBn\fPérer la 
.br
couleur \fBs\fP il est jugé trop 
.br
faible par l algorithme Dans 
.br
la grande majorité des la pièce 
.br
est tout \fBde\fP \fBm\fPême bien visible 
.br
pour tester la pièce lancer 
.br
la commande make testCTPiece 
.br
Pour tester la pièce lancer 
.br
la commande make testCL2Piece 
.br
Cette commande compile le 
.br
fichier \fBde\fP test et le lance 
.br
avec l argument no gui pour \fBn\fP 
.br
afficher que le \fBr\fPésultat des 
.br
tests en \fBmode\fP console Pour 
.br
tester l affichage en \fBmode\fP il 
.br
\fBsuffit\fP ensuite \fBde\fP lancer le 
.br
fichier \fBde\fP test sans make test 
.br
Lance l intégralité des 
.br
tests en \fBmode\fP \fBconsole\fP (seulement`make testPiece`actuellement)\&.Fonctionnalité\fBs\fP à implémenter(Todo list)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP \fBde\fP le 
.br
consulter ce README sur le web 
.br
pour plus \fBde\fP \fBclarté\fP"
.br
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP \fBde\fP le 
.br
consulter ce README sur le web 
.br
pour plus \fBde\fP \fBL1\fP"
.br
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP \fBde\fP le 
.br
consulter ce README sur le web 
.br
pour plus \fBde\fP \fBL2\fP"
.br
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP \fBde\fP le 
.br
consulter ce README sur le web 
.br
pour plus \fBde\fP \fBO\fP"
.br
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP \fBde\fP le 
.br
consulter ce README sur le web 
.br
pour plus \fBde\fP \fBT\fP"
.br
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP \fBde\fP le 
.br
consulter ce README sur le web 
.br
pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé 
.br
implémentées et testées 
.br
Tous les déplacements sont \fBgérés\fP"
.br
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP \fBde\fP le 
.br
consulter ce README sur le web 
.br
pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé 
.br
implémentées et testées 
.br
Tous les déplacements sont \fBy\fP 
.br
compris la « chute nette 
.br
» avec la barre d espace La 
.br
gestion du score est 
.br
également \fBimplémentée\fP"
.br
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP \fBde\fP le 
.br
consulter ce README sur le web 
.br
pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé 
.br
implémentées et testées 
.br
Tous les déplacements sont \fBy\fP 
.br
compris la « chute nette 
.br
» avec la barre d espace La 
.br
gestion du score est 
.br
également avec des niveaux 
.br
plus rapides au fur et 
.br
à mesure que l on détruit 
.br
des lignes Lorsque le jeu est \fBterminé\fP"
.br
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP \fBde\fP le 
.br
consulter ce README sur le web 
.br
pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé 
.br
implémentées et testées 
.br
Tous les déplacements sont \fBy\fP 
.br
compris la « chute nette 
.br
» avec la barre d espace La 
.br
gestion du score est 
.br
également avec des niveaux 
.br
plus rapides au fur et 
.br
à mesure que l on détruit 
.br
des lignes Lorsque le jeu est 
.br
on affiche « Game Over \fB»\fP"
.br
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP \fBde\fP le 
.br
consulter ce README sur le web 
.br
pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé 
.br
implémentées et testées 
.br
Tous les déplacements sont \fBy\fP 
.br
compris la « chute nette 
.br
» avec la barre d espace La 
.br
gestion du score est 
.br
également avec des niveaux 
.br
plus rapides au fur et 
.br
à mesure que l on détruit 
.br
des lignes Lorsque le jeu est 
.br
on affiche « Game Over le 
.br
score obtenu et le niveau 
.br
atteint Choix \fBtechniques\fP"
.br
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP \fBde\fP le 
.br
consulter ce README sur le web 
.br
pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé 
.br
implémentées et testées 
.br
Tous les déplacements sont \fBy\fP 
.br
compris la « chute nette 
.br
» avec la barre d espace La 
.br
gestion du score est 
.br
également avec des niveaux 
.br
plus rapides au fur et 
.br
à mesure que l on détruit 
.br
des lignes Lorsque le jeu est 
.br
on affiche « Game Over le 
.br
score obtenu et le niveau 
.br
atteint Choix pour la rotation 
.br
nous ne nous basons pas sur le 
.br
traitement \fBs\fPéparé \fBde\fP chaque 
.br
état \fBde\fP la pièce Nous 
.br
calculons simplement la 
.br
nouvelle position à partir \fBde\fP 
.br
la \fBmatrice\fP \fBde\fP la pièce et du 
.br
\fBsens\fP \fBde\fP rotation Pour faire 
.br
tourner une pièce vers la \fBdroite\fP"
.br
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP \fBde\fP le 
.br
consulter ce README sur le web 
.br
pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé 
.br
implémentées et testées 
.br
Tous les déplacements sont \fBy\fP 
.br
compris la « chute nette 
.br
» avec la barre d espace La 
.br
gestion du score est 
.br
également avec des niveaux 
.br
plus rapides au fur et 
.br
à mesure que l on détruit 
.br
des lignes Lorsque le jeu est 
.br
on affiche « Game Over le 
.br
score obtenu et le niveau 
.br
atteint Choix pour la rotation 
.br
nous ne nous basons pas sur le 
.br
traitement \fBs\fPéparé \fBde\fP chaque 
.br
état \fBde\fP la pièce Nous 
.br
calculons simplement la 
.br
nouvelle position à partir \fBde\fP 
.br
la \fBmatrice\fP \fBde\fP la pièce et du 
.br
\fBsens\fP \fBde\fP rotation Pour faire 
.br
tourner une pièce vers la il \fBsuffit\fP"
.br
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP \fBde\fP le 
.br
consulter ce README sur le web 
.br
pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé 
.br
implémentées et testées 
.br
Tous les déplacements sont \fBy\fP 
.br
compris la « chute nette 
.br
» avec la barre d espace La 
.br
gestion du score est 
.br
également avec des niveaux 
.br
plus rapides au fur et 
.br
à mesure que l on détruit 
.br
des lignes Lorsque le jeu est 
.br
on affiche « Game Over le 
.br
score obtenu et le niveau 
.br
atteint Choix pour la rotation 
.br
nous ne nous basons pas sur le 
.br
traitement \fBs\fPéparé \fBde\fP chaque 
.br
état \fBde\fP la pièce Nous 
.br
calculons simplement la 
.br
nouvelle position à partir \fBde\fP 
.br
la matrice \fBde\fP la pièce et du 
.br
\fBsens\fP \fBde\fP rotation Pour faire 
.br
tourner une pièce vers la il 
.br
pour chaque élément \fBde\fP la \fBmatrice\fP"
.br
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP \fBde\fP le 
.br
consulter ce README sur le web 
.br
pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé 
.br
implémentées et testées 
.br
Tous les déplacements sont \fBy\fP 
.br
compris la « chute nette 
.br
» avec la barre d espace La 
.br
gestion du score est 
.br
également avec des niveaux 
.br
plus rapides au fur et 
.br
à mesure que l on détruit 
.br
des lignes Lorsque le jeu est 
.br
on affiche « Game Over le 
.br
score obtenu et le niveau 
.br
atteint Choix pour la rotation 
.br
nous ne nous basons pas sur le 
.br
traitement \fBs\fPéparé \fBde\fP chaque 
.br
état \fBde\fP la pièce Nous 
.br
calculons simplement la 
.br
nouvelle position à partir \fBde\fP 
.br
la \fBmatrice\fP \fBde\fP la pièce et du 
.br
\fBsens\fP \fBde\fP rotation Pour faire 
.br
tourner une pièce vers la il 
.br
pour chaque élément \fBde\fP la \fBde\fP 
.br
modifier son ordonnée en son 
.br
abscisse \fBactuelle\fP"
.br
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP \fBde\fP le 
.br
consulter ce README sur le web 
.br
pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé 
.br
implémentées et testées 
.br
Tous les déplacements sont \fBy\fP 
.br
compris la « chute nette 
.br
» avec la barre d espace La 
.br
gestion du score est 
.br
également avec des niveaux 
.br
plus rapides au fur et 
.br
à mesure que l on détruit 
.br
des lignes Lorsque le jeu est 
.br
on affiche « Game Over le 
.br
score obtenu et le niveau 
.br
atteint Choix pour la rotation 
.br
nous ne nous basons pas sur le 
.br
traitement \fBs\fPéparé \fBde\fP chaque 
.br
état \fBde\fP la pièce Nous 
.br
calculons simplement la 
.br
nouvelle position à partir \fBde\fP 
.br
la \fBmatrice\fP \fBde\fP la pièce et du 
.br
\fBsens\fP \fBde\fP rotation Pour faire 
.br
tourner une pièce vers la il 
.br
pour chaque élément \fBde\fP la \fBde\fP 
.br
modifier son ordonnée en son 
.br
abscisse et son abscisse en la 
.br
taille \fBde\fP la \fBmatrice\fP moins 
.br
moins son ordonnée Pour la 
.br
rotation vers la \fBgauche\fP"
.br
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP \fBde\fP le 
.br
consulter ce README sur le web 
.br
pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé 
.br
implémentées et testées 
.br
Tous les déplacements sont \fBy\fP 
.br
compris la « chute nette 
.br
» avec la barre d espace La 
.br
gestion du score est 
.br
également avec des niveaux 
.br
plus rapides au fur et 
.br
à mesure que l on détruit 
.br
des lignes Lorsque le jeu est 
.br
on affiche « Game Over le 
.br
score obtenu et le niveau 
.br
atteint Choix pour la rotation 
.br
nous ne nous basons pas sur le 
.br
traitement \fBs\fPéparé \fBde\fP chaque 
.br
état \fBde\fP la pièce Nous 
.br
calculons simplement la 
.br
nouvelle position à partir \fBde\fP 
.br
la \fBmatrice\fP \fBde\fP la pièce et du 
.br
\fBsens\fP \fBde\fP rotation Pour faire 
.br
tourner une pièce vers la il 
.br
pour chaque élément \fBde\fP la \fBde\fP 
.br
modifier son ordonnée en son 
.br
abscisse et son abscisse en la 
.br
taille \fBde\fP la \fBmatrice\fP moins 
.br
moins son ordonnée Pour la 
.br
rotation vers la \fBc\fP est l 
.br
inverse Ce qui nous donne plus \fBformellement\fP"
.br
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP \fBde\fP le 
.br
consulter ce README sur le web 
.br
pour plus \fBde\fP Z1 et Z2 ont é\fBt\fPé 
.br
implémentées et testées 
.br
Tous les déplacements sont \fBy\fP 
.br
compris la « chute nette 
.br
» avec la barre d espace La 
.br
gestion du score est 
.br
également avec des niveaux 
.br
plus rapides au fur et 
.br
à mesure que l on détruit 
.br
des lignes Lorsque le jeu est 
.br
on affiche « Game Over le 
.br
score obtenu et le niveau 
.br
atteint Choix pour la rotation 
.br
nous ne nous basons pas sur le 
.br
traitement \fBs\fPéparé \fBde\fP chaque 
.br
état \fBde\fP la pièce Nous 
.br
calculons simplement la 
.br
nouvelle position à partir \fBde\fP 
.br
la \fBmatrice\fP \fBde\fP la pièce et du 
.br
\fBsens\fP \fBde\fP rotation Pour faire 
.br
tourner une pièce vers la il 
.br
pour chaque élément \fBde\fP la \fBde\fP 
.br
modifier son ordonnée en son 
.br
abscisse et son abscisse en la 
.br
taille \fBde\fP la \fBmatrice\fP moins 
.br
moins son ordonnée Pour la 
.br
rotation vers la \fBc\fP est l 
.br
inverse Ce qui nous donne plus 
.br
plutô\fBt\fP que \fBde\fP faire une 
.br
disjonction \fBde\fP \fBcas\fP pour chaque \fBZ1\fP"
.br
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP \fBde\fP le 
.br
consulter ce README sur le web 
.br
pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé 
.br
implémentées et testées 
.br
Tous les déplacements sont \fBy\fP 
.br
compris la « chute nette 
.br
» avec la barre d espace La 
.br
gestion du score est 
.br
également avec des niveaux 
.br
plus rapides au fur et 
.br
à mesure que l on détruit 
.br
des lignes Lorsque le jeu est 
.br
on affiche « Game Over le 
.br
score obtenu et le niveau 
.br
atteint Choix pour la rotation 
.br
nous ne nous basons pas sur le 
.br
traitement \fBs\fPéparé \fBde\fP chaque 
.br
état \fBde\fP la pièce Nous 
.br
calculons simplement la 
.br
nouvelle position à partir \fBde\fP 
.br
la \fBmatrice\fP \fBde\fP la pièce et du 
.br
\fBsens\fP \fBde\fP rotation Pour faire 
.br
tourner une pièce vers la il 
.br
pour chaque élément \fBde\fP la \fBde\fP 
.br
modifier son ordonnée en son 
.br
abscisse et son abscisse en la 
.br
taille \fBde\fP la \fBmatrice\fP moins 
.br
moins son ordonnée Pour la 
.br
rotation vers la \fBc\fP est l 
.br
inverse Ce qui nous donne plus 
.br
plutô\fBt\fP que \fBde\fP faire une 
.br
disjonction \fBde\fP cas pour chaque 
.br
Z2 Nous avons ainsi deux cas 
.br
à \fBg\fPérer au lieu nous avons 
.br
fait le choix d utiliser la 
.br
fonction vert et bleu aléatoirement 
.br
L inconvénient est que le 
.br
contraste entre la pièce et 
.br
le fond peut être un peu 
.br
faible Celà rajoute un peu \fBde\fP 
.br
difficulté au jeu Ce serait 
.br
intéressant d évaluer ce 
.br
contraste et regé\fBn\fPérer la 
.br
couleur \fBs\fP il est jugé trop 
.br
faible par l algorithme Dans 
.br
la grande majorité des \fBcas\fP"
.br
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP \fBde\fP le 
.br
consulter ce README sur le web 
.br
pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé 
.br
implémentées et testées 
.br
Tous les déplacements sont \fBy\fP 
.br
compris la « chute nette 
.br
» avec la barre d espace La 
.br
gestion du score est 
.br
également avec des niveaux 
.br
plus rapides au fur et 
.br
à mesure que l on détruit 
.br
des lignes Lorsque le jeu est 
.br
on affiche « Game Over le 
.br
score obtenu et le niveau 
.br
atteint Choix pour la rotation 
.br
nous ne nous basons pas sur le 
.br
traitement \fBs\fPéparé \fBde\fP chaque 
.br
état \fBde\fP la pièce Nous 
.br
calculons simplement la 
.br
nouvelle position à partir \fBde\fP 
.br
la \fBmatrice\fP \fBde\fP la pièce et du 
.br
\fBsens\fP \fBde\fP rotation Pour faire 
.br
tourner une pièce vers la il 
.br
pour chaque élément \fBde\fP la \fBde\fP 
.br
modifier son ordonnée en son 
.br
abscisse et son abscisse en la 
.br
taille \fBde\fP la \fBmatrice\fP moins 
.br
moins son ordonnée Pour la 
.br
rotation vers la \fBc\fP est l 
.br
inverse Ce qui nous donne plus 
.br
plutô\fBt\fP que \fBde\fP faire une 
.br
disjonction \fBde\fP \fBcas\fP pour chaque 
.br
Z2 Nous avons ainsi deux \fBcas\fP 
.br
à \fBg\fPérer au lieu nous avons 
.br
fait le choix d utiliser la 
.br
fonction vert et bleu aléatoirement 
.br
L inconvénient est que le 
.br
contraste entre la pièce et 
.br
le fond peut être un peu 
.br
faible Celà rajoute un peu \fBde\fP 
.br
difficulté au jeu Ce serait 
.br
intéressant d évaluer ce 
.br
contraste et regé\fBn\fPérer la 
.br
couleur \fBs\fP il est jugé trop 
.br
faible par l algorithme Dans 
.br
la grande majorité des la pièce 
.br
est tout \fBde\fP \fBm\fPême bien visible \fBTests\fP"
.br
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP \fBde\fP le 
.br
consulter ce README sur le web 
.br
pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé 
.br
implémentées et testées 
.br
Tous les déplacements sont \fBy\fP 
.br
compris la « chute nette 
.br
» avec la barre d espace La 
.br
gestion du score est 
.br
également avec des niveaux 
.br
plus rapides au fur et 
.br
à mesure que l on détruit 
.br
des lignes Lorsque le jeu est 
.br
on affiche « Game Over le 
.br
score obtenu et le niveau 
.br
atteint Choix pour la rotation 
.br
nous ne nous basons pas sur le 
.br
traitement \fBs\fPéparé \fBde\fP chaque 
.br
état \fBde\fP la pièce Nous 
.br
calculons simplement la 
.br
nouvelle position à partir \fBde\fP 
.br
la \fBmatrice\fP \fBde\fP la pièce et du 
.br
\fBsens\fP \fBde\fP rotation Pour faire 
.br
tourner une pièce vers la il 
.br
pour chaque élément \fBde\fP la \fBde\fP 
.br
modifier son ordonnée en son 
.br
abscisse et son abscisse en la 
.br
taille \fBde\fP la \fBmatrice\fP moins 
.br
moins son ordonnée Pour la 
.br
rotation vers la \fBc\fP est l 
.br
inverse Ce qui nous donne plus 
.br
plutô\fBt\fP que \fBde\fP faire une 
.br
disjonction \fBde\fP \fBcas\fP pour chaque 
.br
Z2 Nous avons ainsi deux \fBcas\fP 
.br
à \fBg\fPérer au lieu nous avons 
.br
fait le choix d utiliser la 
.br
fonction vert et bleu aléatoirement 
.br
L inconvénient est que le 
.br
contraste entre la pièce et 
.br
le fond peut être un peu 
.br
faible Celà rajoute un peu \fBde\fP 
.br
difficulté au jeu Ce serait 
.br
intéressant d évaluer ce 
.br
contraste et regé\fBn\fPérer la 
.br
couleur \fBs\fP il est jugé trop 
.br
faible par l algorithme Dans 
.br
la grande majorité des la pièce 
.br
est tout \fBde\fP \fBm\fPême bien visible 
.br
pour tester la pièce lancer 
.br
la commande make testCTPiece 
.br
Pour tester la pièce lancer 
.br
la commande make testCL2Piece 
.br
Cette commande compile le 
.br
fichier \fBde\fP test et le lance 
.br
avec l argument no gui pour \fBn\fP 
.br
afficher que le \fBr\fPésultat des 
.br
tests en \fBmode\fP \fBconsole\fP Pour 
.br
tester l affichage en \fBmode\fP \fBGUI\fP"
.br
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP \fBde\fP le 
.br
consulter ce README sur le web 
.br
pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé 
.br
implémentées et testées 
.br
Tous les déplacements sont \fBy\fP 
.br
compris la « chute nette 
.br
» avec la barre d espace La 
.br
gestion du score est 
.br
également avec des niveaux 
.br
plus rapides au fur et 
.br
à mesure que l on détruit 
.br
des lignes Lorsque le jeu est 
.br
on affiche « Game Over le 
.br
score obtenu et le niveau 
.br
atteint Choix pour la rotation 
.br
nous ne nous basons pas sur le 
.br
traitement \fBs\fPéparé \fBde\fP chaque 
.br
état \fBde\fP la pièce Nous 
.br
calculons simplement la 
.br
nouvelle position à partir \fBde\fP 
.br
la \fBmatrice\fP \fBde\fP la pièce et du 
.br
\fBsens\fP \fBde\fP rotation Pour faire 
.br
tourner une pièce vers la il 
.br
pour chaque élément \fBde\fP la \fBde\fP 
.br
modifier son ordonnée en son 
.br
abscisse et son abscisse en la 
.br
taille \fBde\fP la \fBmatrice\fP moins 
.br
moins son ordonnée Pour la 
.br
rotation vers la \fBc\fP est l 
.br
inverse Ce qui nous donne plus 
.br
plutô\fBt\fP que \fBde\fP faire une 
.br
disjonction \fBde\fP \fBcas\fP pour chaque 
.br
Z2 Nous avons ainsi deux \fBcas\fP 
.br
à \fBg\fPérer au lieu nous avons 
.br
fait le choix d utiliser la 
.br
fonction vert et bleu aléatoirement 
.br
L inconvénient est que le 
.br
contraste entre la pièce et 
.br
le fond peut être un peu 
.br
faible Celà rajoute un peu \fBde\fP 
.br
difficulté au jeu Ce serait 
.br
intéressant d évaluer ce 
.br
contraste et regé\fBn\fPérer la 
.br
couleur \fBs\fP il est jugé trop 
.br
faible par l algorithme Dans 
.br
la grande majorité des la pièce 
.br
est tout \fBde\fP \fBm\fPême bien visible 
.br
pour tester la pièce lancer 
.br
la commande make testCTPiece 
.br
Pour tester la pièce lancer 
.br
la commande make testCL2Piece 
.br
Cette commande compile le 
.br
fichier \fBde\fP test et le lance 
.br
avec l argument no gui pour \fBn\fP 
.br
afficher que le \fBr\fPésultat des 
.br
tests en \fBmode\fP \fBconsole\fP Pour 
.br
tester l affichage en \fBmode\fP il 
.br
\fBsuffit\fP ensuite \fBde\fP lancer le 
.br
fichier \fBde\fP test sans \fBtestCIPiece\fP"
.br
.ti -1c
.RI "**mainpage *Nous vous 
.br
conseillons plutô\fBt\fP \fBde\fP le 
.br
consulter ce README sur le web 
.br
pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé 
.br
implémentées et testées 
.br
Tous les déplacements sont \fBy\fP 
.br
compris la « chute nette 
.br
» avec la barre d espace La 
.br
gestion du score est 
.br
également avec des niveaux 
.br
plus rapides au fur et 
.br
à mesure que l on détruit 
.br
des lignes Lorsque le jeu est 
.br
on affiche « Game Over le 
.br
score obtenu et le niveau 
.br
atteint Choix pour la rotation 
.br
nous ne nous basons pas sur le 
.br
traitement \fBs\fPéparé \fBde\fP chaque 
.br
état \fBde\fP la pièce Nous 
.br
calculons simplement la 
.br
nouvelle position à partir \fBde\fP 
.br
la \fBmatrice\fP \fBde\fP la pièce et du 
.br
\fBsens\fP \fBde\fP rotation Pour faire 
.br
tourner une pièce vers la il 
.br
pour chaque élément \fBde\fP la \fBde\fP 
.br
modifier son ordonnée en son 
.br
abscisse et son abscisse en la 
.br
taille \fBde\fP la \fBmatrice\fP moins 
.br
moins son ordonnée Pour la 
.br
rotation vers la \fBc\fP est l 
.br
inverse Ce qui nous donne plus 
.br
plutô\fBt\fP que \fBde\fP faire une 
.br
disjonction \fBde\fP \fBcas\fP pour chaque 
.br
Z2 Nous avons ainsi deux \fBcas\fP 
.br
à \fBg\fPérer au lieu nous avons 
.br
fait le choix d utiliser la 
.br
fonction vert et bleu aléatoirement 
.br
L inconvénient est que le 
.br
contraste entre la pièce et 
.br
le fond peut être un peu 
.br
faible Celà rajoute un peu \fBde\fP 
.br
difficulté au jeu Ce serait 
.br
intéressant d évaluer ce 
.br
contraste et regé\fBn\fPérer la 
.br
couleur \fBs\fP il est jugé trop 
.br
faible par l algorithme Dans 
.br
la grande majorité des la pièce 
.br
est tout \fBde\fP \fBm\fPême bien visible 
.br
pour tester la pièce lancer 
.br
la commande make testCTPiece 
.br
Pour tester la pièce lancer 
.br
la commande make testCL2Piece 
.br
Cette commande compile le 
.br
fichier \fBde\fP test et le lance 
.br
avec l argument no gui pour \fBn\fP 
.br
afficher que le \fBr\fPésultat des 
.br
tests en \fBmode\fP \fBconsole\fP Pour 
.br
tester l affichage en \fBmode\fP il 
.br
\fBsuffit\fP ensuite \fBde\fP lancer le 
.br
fichier \fBde\fP test sans \fBtestCOPiece\fP"
.br
.in -1c
.SH "Documentation des fonctions"
.PP 
.SS "** mainpage* Nous vous conseillons plutô\fBt\fP \fBde\fP le consulter ce README sur le web pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé implémentées et testées Tous les déplacements sont \fBy\fP compris la « chute nette » avec la barre d espace La gestion du score est également avec des niveaux plus rapides au fur et à mesure que l on détruit des lignes Lorsque le jeu est on affiche « Game Over le score obtenu et le niveau atteint Choix pour la rotation nous ne nous basons pas sur le traitement \fBs\fPéparé \fBde\fP chaque état \fBde\fP la pièce Nous calculons simplement la nouvelle position à partir \fBde\fP la \fBmatrice\fP \fBde\fP la pièce et du \fBsens\fP \fBde\fP rotation Pour faire tourner une pièce vers la il pour chaque élément \fBde\fP la \fBde\fP modifier son ordonnée en son abscisse et son abscisse en la taille \fBde\fP la \fBmatrice\fP moins moins son ordonnée Pour la rotation vers la \fBc\fP est l inverse Ce qui nous donne plus plutô\fBt\fP que \fBde\fP faire une disjonction \fBde\fP \fBcas\fP pour chaque Z2 Nous avons ainsi deux \fBcas\fP à \fBg\fPérer au lieu nous avons fait le choix d utiliser la fonction vert et bleu aléatoirement L inconvénient est que le contraste entre la pièce et le fond peut être un peu faible Celà rajoute un peu \fBde\fP difficulté au jeu Ce serait intéressant d évaluer ce contraste et regé\fBn\fPérer la couleur \fBs\fP il est jugé trop faible par l algorithme Dans la grande majorité des la pièce est tout \fBde\fP \fBm\fPême bien visible pour tester la pièce lancer la commande make testCTPiece Pour tester la pièce lancer la commande make testCL2Piece Cette commande compile le fichier \fBde\fP test et le lance avec l argument no gui pour \fBn\fP afficher que le \fBr\fPésultat des tests en \fBmode\fP \fBconsole\fP Pour tester l affichage en \fBmode\fP il \fBsuffit\fP ensuite \fBde\fP lancer le fichier \fBde\fP test sans arguments (`\&.\&./bin/testC?Piece\&.bin`en remplaçant évidemment le'?'par la pièce àtester)"

.SS "** mainpage* Nous vous conseillons plutô\fBt\fP \fBde\fP le consulter ce README sur le web pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé implémentées et testées Tous les déplacements sont \fBy\fP compris la « chute nette » avec la barre d espace La gestion du score est également avec des niveaux plus rapides au fur et à mesure que l on détruit des lignes Lorsque le jeu est on affiche « Game Over le score obtenu et le niveau atteint Choix pour la rotation nous ne nous basons pas sur le traitement \fBs\fPéparé \fBde\fP chaque état \fBde\fP la pièce Nous calculons simplement la nouvelle position à partir \fBde\fP la \fBmatrice\fP \fBde\fP la pièce et du \fBsens\fP \fBde\fP rotation Pour faire tourner une pièce vers la il pour chaque élément \fBde\fP la \fBde\fP modifier son ordonnée en son abscisse et son abscisse en la taille \fBde\fP la \fBmatrice\fP moins moins son ordonnée Pour la rotation vers la \fBc\fP est l inverse Ce qui nous donne plus plutô\fBt\fP que \fBde\fP faire une disjonction \fBde\fP \fBcas\fP pour chaque Z2 Nous avons ainsi deux \fBcas\fP à \fBg\fPérer au lieu nous avons fait le choix d utiliser la fonction vert et bleu aléatoirement L inconvénient est que le contraste entre la pièce et le fond peut être un peu faible Celà rajoute un peu \fBde\fP difficulté au jeu Ce serait intéressant d évaluer ce contraste et regé\fBn\fPérer la couleur \fBs\fP il est jugé trop faible par l algorithme Dans la grande majorité des la pièce est tout \fBde\fP \fBm\fPême bien visible pour tester la pièce lancer la commande make testCTPiece Pour tester la pièce lancer la commande make testCL2Piece Cette commande compile le fichier \fBde\fP test et le lance avec l argument no gui pour \fBn\fP afficher que le \fBr\fPésultat des tests en \fBmode\fP console Pour tester l affichage en \fBmode\fP il \fBsuffit\fP ensuite \fBde\fP lancer le fichier \fBde\fP test sans make test Lance l intégralité des tests en \fBmode\fP console (seulement`make testPiece`actuellement)"

.SS "** mainpage* Nous vous conseillons plutô\fBt\fP de le consulter ce README sur le web pour plus de \fBZ1\fP et Z2 ont é\fBt\fPé implémentées et testées Tous les déplacements sont \fBy\fP compris la « chute nette » avec la barre d espace La gestion du score est également avec des niveaux plus rapides au fur et à mesure que l on détruit des lignes Lorsque le jeu est on affiche « Game Over le score obtenu et le niveau atteint Choix pour la rotation nous ne nous basons pas sur le traitement \fBs\fPéparé de chaque état de la pièce Nous calculons simplement la nouvelle position à partir de la \fBmatrice\fP de la pièce et du \fBsens\fP de rotation Pour faire tourner une pièce vers la il pour chaque élément de la de modifier son ordonnée en son abscisse et son abscisse en la taille de la \fBmatrice\fP moins moins son ordonnée Pour la rotation vers la \fBc\fP est l inverse Ce qui nous donne plus plutô\fBt\fP que de faire une disjonction de \fBcas\fP pour chaque Z2 Nous avons ainsi deux \fBcas\fP à \fBg\fPérer au lieu de (4×6-3, la pièce \fBO\fP étant'insensible'à larotation)"

.SS "** mainpage* Nous vous conseillons plutô\fBt\fP \fBde\fP le consulter ce README sur le web pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé implémentées et testées Tous les déplacements sont \fBy\fP compris la « chute nette » avec la barre d espace La gestion du score est également avec des niveaux plus rapides au fur et à mesure que l on détruit des lignes Lorsque le jeu est on affiche « Game Over le score obtenu et le niveau atteint Choix pour la rotation nous ne nous basons pas sur le traitement \fBs\fPéparé \fBde\fP chaque état \fBde\fP la pièce Nous calculons simplement la nouvelle position à partir \fBde\fP la \fBmatrice\fP \fBde\fP la pièce et du \fBsens\fP \fBde\fP rotation Pour faire tourner une pièce vers la il pour chaque élément \fBde\fP la \fBde\fP modifier son ordonnée en son abscisse et son abscisse en la taille \fBde\fP la \fBmatrice\fP moins moins son ordonnée Pour la rotation vers la \fBc\fP est l inverse Ce qui nous donne plus plutô\fBt\fP que \fBde\fP faire une disjonction \fBde\fP \fBcas\fP pour chaque Z2 Nous avons ainsi deux \fBcas\fP à \fBg\fPérer au lieu nous avons fait le choix d utiliser la fonction rand ()"

.SS "** mainpage* Nous vous conseillons plutô\fBt\fP \fBde\fP le consulter ce README sur le web pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé implémentées et testées Tous les déplacements sont \fBy\fP compris la « chute nette » avec la barre d espace La gestion du score est également avec des niveaux plus rapides au fur et à mesure que l on détruit des lignes Lorsque le jeu est on affiche « Game Over le score obtenu et le niveau atteint Choix pour la rotation nous ne nous basons pas sur le traitement \fBs\fPéparé \fBde\fP chaque état \fBde\fP la pièce Nous calculons simplement la nouvelle position à partir \fBde\fP la \fBmatrice\fP \fBde\fP la pièce et du sens \fBde\fP rotation Pour faire tourner une pièce vers la il pour chaque élément \fBde\fP la \fBde\fP modifier son ordonnée en son abscisse et son abscisse en la taille \fBde\fP la \fBmatrice\fP moins moins son ordonnée Pour la rotation vers la \fBc\fP est l inverse Ce qui nous donne plus plutô\fBt\fP que \fBde\fP faire une disjonction \fBde\fP \fBcas\fP pour chaque sens (Top, Right, Bottom, Left)"

.SH "Documentation des variables"
.PP 
.SS "** mainpage* Nous vous conseillons plutô\fBt\fP \fBde\fP le consulter ce README sur le web pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé implémentées et testées Tous les déplacements sont \fBy\fP compris la « chute nette » avec la barre d espace La gestion du score est également avec des niveaux plus rapides au fur et à mesure que l on détruit des lignes Lorsque le jeu est on affiche « Game Over le score obtenu et le niveau atteint Choix pour la rotation nous ne nous basons pas sur le traitement \fBs\fPéparé \fBde\fP chaque état \fBde\fP la pièce Nous calculons simplement la nouvelle position à partir \fBde\fP la \fBmatrice\fP \fBde\fP la pièce et du \fBsens\fP \fBde\fP rotation Pour faire tourner une pièce vers la il pour chaque élément \fBde\fP la \fBde\fP modifier son ordonnée en son abscisse actuelle"

.PP
Définition à la ligne 26 du fichier mainpage\&.dox\&.
.SS "** mainpage* Nous vous conseillons plutô\fBt\fP \fBde\fP le consulter ce README sur le web pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé implémentées et testées Tous les déplacements sont \fBy\fP compris la « chute nette » avec la barre d espace La gestion du score est également avec des niveaux plus rapides au fur et à mesure que l on détruit des lignes Lorsque le jeu est on affiche « Game Over le score obtenu et le niveau atteint Choix pour la rotation nous ne nous basons pas sur le traitement \fBs\fPéparé \fBde\fP chaque état \fBde\fP la pièce Nous calculons simplement la nouvelle position à partir \fBde\fP la \fBmatrice\fP \fBde\fP la pièce et du \fBsens\fP \fBde\fP rotation Pour faire tourner une pièce vers la il pour chaque élément \fBde\fP la \fBde\fP modifier son ordonnée en son abscisse et son abscisse en la taille \fBde\fP la \fBmatrice\fP moins moins son ordonnée Pour la rotation vers la \fBc\fP est l inverse Ce qui nous donne plus plutô\fBt\fP que \fBde\fP faire une disjonction \fBde\fP cas pour chaque Z2 Nous avons ainsi deux cas à \fBg\fPérer au lieu nous avons fait le choix d utiliser la fonction vert et bleu aléatoirement L inconvénient est que le contraste entre la pièce et le fond peut être un peu faible Celà rajoute un peu \fBde\fP difficulté au jeu Ce serait intéressant d évaluer ce contraste et regé\fBn\fPérer la couleur \fBs\fP il est jugé trop faible par l algorithme Dans la grande majorité des cas"

.PP
Définition à la ligne 66 du fichier mainpage\&.dox\&.
.SS "** mainpage* Nous vous conseillons plutô\fBt\fP \fBde\fP le consulter ce README sur le web pour plus \fBde\fP clarté"

.PP
Définition à la ligne 19 du fichier mainpage\&.dox\&.
.SS "** mainpage* Nous vous conseillons plutô\fBt\fP \fBde\fP le consulter ce README sur le web pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé implémentées et testées Tous les déplacements sont \fBy\fP compris la « chute nette » avec la barre d espace La gestion du score est également avec des niveaux plus rapides au fur et à mesure que l on détruit des lignes Lorsque le jeu est on affiche « Game Over le score obtenu et le niveau atteint Choix pour la rotation nous ne nous basons pas sur le traitement \fBs\fPéparé \fBde\fP chaque état \fBde\fP la pièce Nous calculons simplement la nouvelle position à partir \fBde\fP la \fBmatrice\fP \fBde\fP la pièce et du \fBsens\fP \fBde\fP rotation Pour faire tourner une pièce vers la droite"

.PP
Définition à la ligne 26 du fichier mainpage\&.dox\&.
.SS "** mainpage* Nous vous conseillons plutô\fBt\fP \fBde\fP le consulter ce README sur le web pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé implémentées et testées Tous les déplacements sont \fBy\fP compris la « chute nette » avec la barre d espace La gestion du score est également avec des niveaux plus rapides au fur et à mesure que l on détruit des lignes Lorsque le jeu est on affiche « Game Over le score obtenu et le niveau atteint Choix pour la rotation nous ne nous basons pas sur le traitement \fBs\fPéparé \fBde\fP chaque état \fBde\fP la pièce Nous calculons simplement la nouvelle position à partir \fBde\fP la \fBmatrice\fP \fBde\fP la pièce et du \fBsens\fP \fBde\fP rotation Pour faire tourner une pièce vers la il pour chaque élément \fBde\fP la \fBde\fP modifier son ordonnée en son abscisse et son abscisse en la taille \fBde\fP la \fBmatrice\fP moins moins son ordonnée Pour la rotation vers la \fBc\fP est l inverse Ce qui nous donne plus formellement"

.PP
Définition à la ligne 26 du fichier mainpage\&.dox\&.
.SS "** mainpage* Nous vous conseillons plutô\fBt\fP \fBde\fP le consulter ce README sur le web pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé implémentées et testées Tous les déplacements sont \fBy\fP compris la « chute nette » avec la barre d espace La gestion du score est également avec des niveaux plus rapides au fur et à mesure que l on détruit des lignes Lorsque le jeu est on affiche « Game Over le score obtenu et le niveau atteint Choix pour la rotation nous ne nous basons pas sur le traitement \fBs\fPéparé \fBde\fP chaque état \fBde\fP la pièce Nous calculons simplement la nouvelle position à partir \fBde\fP la \fBmatrice\fP \fBde\fP la pièce et du \fBsens\fP \fBde\fP rotation Pour faire tourner une pièce vers la il pour chaque élément \fBde\fP la \fBde\fP modifier son ordonnée en son abscisse et son abscisse en la taille \fBde\fP la \fBmatrice\fP moins moins son ordonnée Pour la rotation vers la gauche"

.PP
Définition à la ligne 26 du fichier mainpage\&.dox\&.
.SS "** mainpage* Nous vous conseillons plutô\fBt\fP \fBde\fP le consulter ce README sur le web pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé implémentées et testées Tous les déplacements sont \fBy\fP compris la « chute nette » avec la barre d espace La gestion du score est également avec des niveaux plus rapides au fur et à mesure que l on détruit des lignes Lorsque le jeu est on affiche « Game Over le score obtenu et le niveau atteint Choix pour la rotation nous ne nous basons pas sur le traitement \fBs\fPéparé \fBde\fP chaque état \fBde\fP la pièce Nous calculons simplement la nouvelle position à partir \fBde\fP la \fBmatrice\fP \fBde\fP la pièce et du \fBsens\fP \fBde\fP rotation Pour faire tourner une pièce vers la il pour chaque élément \fBde\fP la \fBde\fP modifier son ordonnée en son abscisse et son abscisse en la taille \fBde\fP la \fBmatrice\fP moins moins son ordonnée Pour la rotation vers la \fBc\fP est l inverse Ce qui nous donne plus plutô\fBt\fP que \fBde\fP faire une disjonction \fBde\fP \fBcas\fP pour chaque Z2 Nous avons ainsi deux \fBcas\fP à \fBg\fPérer au lieu nous avons fait le choix d utiliser la fonction vert et bleu aléatoirement L inconvénient est que le contraste entre la pièce et le fond peut être un peu faible Celà rajoute un peu \fBde\fP difficulté au jeu Ce serait intéressant d évaluer ce contraste et regé\fBn\fPérer la couleur \fBs\fP il est jugé trop faible par l algorithme Dans la grande majorité des la pièce est tout \fBde\fP \fBm\fPême bien visible pour tester la pièce lancer la commande make testCTPiece Pour tester la pièce lancer la commande make testCL2Piece Cette commande compile le fichier \fBde\fP test et le lance avec l argument no gui pour \fBn\fP afficher que le \fBr\fPésultat des tests en \fBmode\fP \fBconsole\fP Pour tester l affichage en \fBmode\fP GUI"

.PP
Définition à la ligne 71 du fichier mainpage\&.dox\&.
.SS "** mainpage* Nous vous conseillons plutô\fBt\fP \fBde\fP le consulter ce README sur le web pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé implémentées et testées Tous les déplacements sont \fBg\fPé\fBr\fPé\fBs\fP"

.PP
Définition à la ligne 19 du fichier mainpage\&.dox\&.
.SS "** mainpage* Nous vous conseillons plutô\fBt\fP \fBde\fP le consulter ce README sur le web pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé implémentées et testées Tous les déplacements sont \fBy\fP compris la « chute nette » avec la barre d espace La gestion du score est également implémentée"

.PP
Définition à la ligne 19 du fichier mainpage\&.dox\&.
.SS "**mainpage *Nous vous conseillons plutô\fBt\fP \fBde\fP le consulter ce README sur le web pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé implémentées et testées Tous les déplacements sont \fBy\fP compris la « chute nette » avec la barre d espace La gestion du score est également avec des niveaux plus rapides au fur et à mesure que l on détruit des lignes Lorsque le jeu est on affiche « Game Over le score obtenu et le niveau atteint Choix pour la rotation nous ne nous basons pas sur le traitement \fBs\fPéparé \fBde\fP chaque état \fBde\fP la pièce Nous calculons simplement la nouvelle position à partir \fBde\fP la \fBmatrice\fP \fBde\fP la pièce et du \fBsens\fP \fBde\fP rotation Pour faire tourner une pièce vers la il pour chaque élément \fBde\fP la \fBde\fP modifier son ordonnée en son abscisse et son abscisse en la taille \fBde\fP la \fBmatrice\fP moins moins son ordonnée Pour la rotation vers la \fBc\fP est l inverse Ce qui nous donne plus plutô\fBt\fP que \fBde\fP faire une disjonction \fBde\fP \fBcas\fP pour chaque L1"

.PP
Définition à la ligne 19 du fichier mainpage\&.dox\&.
.SS "**mainpage *Nous vous conseillons plutô\fBt\fP \fBde\fP le consulter ce README sur le web pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé implémentées et testées Tous les déplacements sont \fBy\fP compris la « chute nette » avec la barre d espace La gestion du score est également avec des niveaux plus rapides au fur et à mesure que l on détruit des lignes Lorsque le jeu est on affiche « Game Over le score obtenu et le niveau atteint Choix pour la rotation nous ne nous basons pas sur le traitement \fBs\fPéparé \fBde\fP chaque état \fBde\fP la pièce Nous calculons simplement la nouvelle position à partir \fBde\fP la \fBmatrice\fP \fBde\fP la pièce et du \fBsens\fP \fBde\fP rotation Pour faire tourner une pièce vers la il pour chaque élément \fBde\fP la \fBde\fP modifier son ordonnée en son abscisse et son abscisse en la taille \fBde\fP la \fBmatrice\fP moins moins son ordonnée Pour la rotation vers la \fBc\fP est l inverse Ce qui nous donne plus plutô\fBt\fP que \fBde\fP faire une disjonction \fBde\fP \fBcas\fP pour chaque Z2 Nous avons ainsi deux \fBcas\fP à \fBg\fPérer au lieu nous avons fait le choix d utiliser la fonction vert et bleu aléatoirement L inconvénient est que le contraste entre la pièce et le fond peut être un peu faible Celà rajoute un peu \fBde\fP difficulté au jeu Ce serait intéressant d évaluer ce contraste et regé\fBn\fPérer la couleur \fBs\fP il est jugé trop faible par l algorithme Dans la grande majorité des la pièce est tout \fBde\fP \fBm\fPême bien visible pour tester la pièce lancer la commande make testCTPiece Pour tester la pièce L2"

.PP
Définition à la ligne 19 du fichier mainpage\&.dox\&.
.SS "** mainpage* Nous vous conseillons plutô\fBt\fP \fBde\fP le consulter ce README sur le web pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé implémentées et testées Tous les déplacements sont \fBy\fP compris la « chute nette » avec la barre d espace La gestion du score est également avec des niveaux plus rapides au fur et à mesure que l on détruit des lignes Lorsque le jeu est on affiche « Game Over le score obtenu et le niveau atteint Choix pour la rotation nous ne nous basons pas sur le traitement \fBs\fPéparé \fBde\fP chaque état \fBde\fP la pièce Nous calculons simplement la nouvelle position à partir \fBde\fP la matrice \fBde\fP la pièce et du \fBsens\fP \fBde\fP rotation Pour faire tourner une pièce vers la il pour chaque élément \fBde\fP la matrice"

.PP
Définition à la ligne 26 du fichier mainpage\&.dox\&.
.SS "** mainpage* Nous vous conseillons plutô\fBt\fP \fBde\fP le consulter ce README sur le web pour plus \fBde\fP O"

.PP
Définition à la ligne 19 du fichier mainpage\&.dox\&.
.SS "** mainpage* Nous vous conseillons plutô\fBt\fP \fBde\fP le consulter ce README sur le web pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé implémentées et testées Tous les déplacements sont \fBy\fP compris la « chute nette » avec la barre d espace La gestion du score est également avec des niveaux plus rapides au fur et à mesure que l on détruit des lignes Lorsque le jeu est on affiche « Game Over le score obtenu et le niveau atteint Choix pour la rotation nous ne nous basons pas sur le traitement \fBs\fPéparé \fBde\fP chaque état \fBde\fP la pièce Nous calculons simplement la nouvelle position à partir \fBde\fP la \fBmatrice\fP \fBde\fP la pièce et du \fBsens\fP \fBde\fP rotation Pour faire tourner une pièce vers la il suffit"

.PP
Définition à la ligne 26 du fichier mainpage\&.dox\&.
.SS "**mainpage *Nous vous conseillons plutô\fBt\fP \fBde\fP le consulter ce README sur le web pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé implémentées et testées Tous les déplacements sont \fBy\fP compris la « chute nette » avec la barre d espace La gestion du score est également avec des niveaux plus rapides au fur et à mesure que l on détruit des lignes Lorsque le jeu est on affiche « Game Over le score obtenu et le niveau atteint Choix pour la rotation nous ne nous basons pas sur le traitement \fBs\fPéparé \fBde\fP chaque état \fBde\fP la pièce Nous calculons simplement la nouvelle position à partir \fBde\fP la \fBmatrice\fP \fBde\fP la pièce et du \fBsens\fP \fBde\fP rotation Pour faire tourner une pièce vers la il pour chaque élément \fBde\fP la \fBde\fP modifier son ordonnée en son abscisse et son abscisse en la taille \fBde\fP la \fBmatrice\fP moins moins son ordonnée Pour la rotation vers la \fBc\fP est l inverse Ce qui nous donne plus plutô\fBt\fP que \fBde\fP faire une disjonction \fBde\fP \fBcas\fP pour chaque Z2 Nous avons ainsi deux \fBcas\fP à \fBg\fPérer au lieu nous avons fait le choix d utiliser la fonction vert et bleu aléatoirement L inconvénient est que le contraste entre la pièce et le fond peut être un peu faible Celà rajoute un peu \fBde\fP difficulté au jeu Ce serait intéressant d évaluer ce contraste et regé\fBn\fPérer la couleur \fBs\fP il est jugé trop faible par l algorithme Dans la grande majorité des la pièce est tout \fBde\fP \fBm\fPême bien visible pour tester la pièce T"

.PP
Définition à la ligne 19 du fichier mainpage\&.dox\&.
.SS "** mainpage* Nous vous conseillons plutô\fBt\fP \fBde\fP le consulter ce README sur le web pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé implémentées et testées Tous les déplacements sont \fBy\fP compris la « chute nette » avec la barre d espace La gestion du score est également avec des niveaux plus rapides au fur et à mesure que l on détruit des lignes Lorsque le jeu est on affiche « Game Over le score obtenu et le niveau atteint Choix techniques"
\fBValeur initiale :\fP
.PP
.nf
================================================================================


                              Rotation des pièces

Nous avons fait le choix de ne pas implémenter la méthode CPieceAbstract::Turn()
dans les classes filles et d'effectuer la rotation de la pièce directement dans
les méthodes CPieceAbstract::TurnRight() et CPieceAbstract::TurnLeft()\&. En
effet
.fi
.PP
Définition à la ligne 26 du fichier mainpage\&.dox\&.
.SS "** mainpage* Nous vous conseillons plutô\fBt\fP \fBde\fP le consulter ce README sur le web pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé implémentées et testées Tous les déplacements sont \fBy\fP compris la « chute nette » avec la barre d espace La gestion du score est également avec des niveaux plus rapides au fur et à mesure que l on détruit des lignes Lorsque le jeu est terminé"

.PP
Définition à la ligne 19 du fichier mainpage\&.dox\&.
.SS "** mainpage* Nous vous conseillons plutô\fBt\fP \fBde\fP le consulter ce README sur le web pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé implémentées et testées Tous les déplacements sont \fBy\fP compris la « chute nette » avec la barre d espace La gestion du score est également avec des niveaux plus rapides au fur et à mesure que l on détruit des lignes Lorsque le jeu est on affiche « Game Over le score obtenu et le niveau atteint Choix pour la rotation nous ne nous basons pas sur le traitement \fBs\fPéparé \fBde\fP chaque état \fBde\fP la pièce Nous calculons simplement la nouvelle position à partir \fBde\fP la \fBmatrice\fP \fBde\fP la pièce et du \fBsens\fP \fBde\fP rotation Pour faire tourner une pièce vers la il pour chaque élément \fBde\fP la \fBde\fP modifier son ordonnée en son abscisse et son abscisse en la taille \fBde\fP la \fBmatrice\fP moins moins son ordonnée Pour la rotation vers la \fBc\fP est l inverse Ce qui nous donne plus plutô\fBt\fP que \fBde\fP faire une disjonction \fBde\fP \fBcas\fP pour chaque Z2 Nous avons ainsi deux \fBcas\fP à \fBg\fPérer au lieu nous avons fait le choix d utiliser la fonction vert et bleu aléatoirement L inconvénient est que le contraste entre la pièce et le fond peut être un peu faible Celà rajoute un peu \fBde\fP difficulté au jeu Ce serait intéressant d évaluer ce contraste et regé\fBn\fPérer la couleur \fBs\fP il est jugé trop faible par l algorithme Dans la grande majorité des la pièce est tout \fBde\fP \fBm\fPême bien visible pour tester la pièce lancer la commande make testCTPiece Pour tester la pièce lancer la commande make testCL2Piece Cette commande compile le fichier \fBde\fP test et le lance avec l argument no gui pour \fBn\fP afficher que le \fBr\fPésultat des tests en \fBmode\fP \fBconsole\fP Pour tester l affichage en \fBmode\fP il \fBsuffit\fP ensuite \fBde\fP lancer le fichier \fBde\fP test sans testCIPiece"

.PP
Définition à la ligne 99 du fichier mainpage\&.dox\&.
.SS "** mainpage* Nous vous conseillons plutô\fBt\fP \fBde\fP le consulter ce README sur le web pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé implémentées et testées Tous les déplacements sont \fBy\fP compris la « chute nette » avec la barre d espace La gestion du score est également avec des niveaux plus rapides au fur et à mesure que l on détruit des lignes Lorsque le jeu est on affiche « Game Over le score obtenu et le niveau atteint Choix pour la rotation nous ne nous basons pas sur le traitement \fBs\fPéparé \fBde\fP chaque état \fBde\fP la pièce Nous calculons simplement la nouvelle position à partir \fBde\fP la \fBmatrice\fP \fBde\fP la pièce et du \fBsens\fP \fBde\fP rotation Pour faire tourner une pièce vers la il pour chaque élément \fBde\fP la \fBde\fP modifier son ordonnée en son abscisse et son abscisse en la taille \fBde\fP la \fBmatrice\fP moins moins son ordonnée Pour la rotation vers la \fBc\fP est l inverse Ce qui nous donne plus plutô\fBt\fP que \fBde\fP faire une disjonction \fBde\fP \fBcas\fP pour chaque Z2 Nous avons ainsi deux \fBcas\fP à \fBg\fPérer au lieu nous avons fait le choix d utiliser la fonction vert et bleu aléatoirement L inconvénient est que le contraste entre la pièce et le fond peut être un peu faible Celà rajoute un peu \fBde\fP difficulté au jeu Ce serait intéressant d évaluer ce contraste et regé\fBn\fPérer la couleur \fBs\fP il est jugé trop faible par l algorithme Dans la grande majorité des la pièce est tout \fBde\fP \fBm\fPême bien visible pour tester la pièce lancer la commande make testCTPiece Pour tester la pièce lancer la commande make testCL2Piece Cette commande compile le fichier \fBde\fP test et le lance avec l argument no gui pour \fBn\fP afficher que le \fBr\fPésultat des tests en \fBmode\fP \fBconsole\fP Pour tester l affichage en \fBmode\fP il \fBsuffit\fP ensuite \fBde\fP lancer le fichier \fBde\fP test sans testCOPiece"

.PP
Définition à la ligne 99 du fichier mainpage\&.dox\&.
.SS "** mainpage* Nous vous conseillons plutô\fBt\fP \fBde\fP le consulter ce README sur le web pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé implémentées et testées Tous les déplacements sont \fBy\fP compris la « chute nette » avec la barre d espace La gestion du score est également avec des niveaux plus rapides au fur et à mesure que l on détruit des lignes Lorsque le jeu est on affiche « Game Over le score obtenu et le niveau atteint Choix pour la rotation nous ne nous basons pas sur le traitement \fBs\fPéparé \fBde\fP chaque état \fBde\fP la pièce Nous calculons simplement la nouvelle position à partir \fBde\fP la \fBmatrice\fP \fBde\fP la pièce et du \fBsens\fP \fBde\fP rotation Pour faire tourner une pièce vers la il pour chaque élément \fBde\fP la \fBde\fP modifier son ordonnée en son abscisse et son abscisse en la taille \fBde\fP la \fBmatrice\fP moins moins son ordonnée Pour la rotation vers la \fBc\fP est l inverse Ce qui nous donne plus plutô\fBt\fP que \fBde\fP faire une disjonction \fBde\fP \fBcas\fP pour chaque Z2 Nous avons ainsi deux \fBcas\fP à \fBg\fPérer au lieu nous avons fait le choix d utiliser la fonction vert et bleu aléatoirement L inconvénient est que le contraste entre la pièce et le fond peut être un peu faible Celà rajoute un peu \fBde\fP difficulté au jeu Ce serait intéressant d évaluer ce contraste et regé\fBn\fPérer la couleur \fBs\fP il est jugé trop faible par l algorithme Dans la grande majorité des la pièce est tout \fBde\fP \fBm\fPême bien visible Tests"
\fBValeur initiale :\fP
.PP
.nf
================================================================================

Les tests se compilent et s'exécutent en mode console avec la commande `make`\&.
Chaque test élémentaire comporte une courte description et son statut ([PASS] en
vert si le test s'est bien déroulé, [FAIL] en rouge si le test a échoué)\&. Pour
plus de lisibilité le statut est toujours affiché en fin de ligne (une ligne
faisant 80 caractères)\&.

Voici la liste des tests disponibles :



                              `make testC?Piece`

Lance le test de la pièce '?'\&. Par exemple
.fi
.PP
Définition à la ligne 71 du fichier mainpage\&.dox\&.
.SS "** mainpage* Nous vous conseillons plutô\fBt\fP \fBde\fP le consulter ce README sur le web pour plus \fBde\fP Z1 et Z2 ont é\fBt\fPé implémentées et testées Tous les déplacements sont \fBy\fP compris la « chute nette » avec la barre d espace La gestion du score est également avec des niveaux plus rapides au fur et à mesure que l on détruit des lignes Lorsque le jeu est on affiche « Game Over le score obtenu et le niveau atteint Choix pour la rotation nous ne nous basons pas sur le traitement \fBs\fPéparé \fBde\fP chaque état \fBde\fP la pièce Nous calculons simplement la nouvelle position à partir \fBde\fP la \fBmatrice\fP \fBde\fP la pièce et du \fBsens\fP \fBde\fP rotation Pour faire tourner une pièce vers la il pour chaque élément \fBde\fP la \fBde\fP modifier son ordonnée en son abscisse et son abscisse en la taille \fBde\fP la \fBmatrice\fP moins moins son ordonnée Pour la rotation vers la \fBc\fP est l inverse Ce qui nous donne plus plutô\fBt\fP que \fBde\fP faire une disjonction \fBde\fP \fBcas\fP pour chaque Z1"

.PP
Définition à la ligne 51 du fichier mainpage\&.dox\&.
.SS "** mainpage* Nous vous conseillons plutô\fBt\fP \fBde\fP le consulter ce README sur le web pour plus \fBde\fP \fBZ1\fP et Z2 ont é\fBt\fPé implémentées et testées Tous les déplacements sont \fBy\fP compris la « chute nette » avec la barre d espace La gestion du score est également avec des niveaux plus rapides au fur et à mesure que l on détruit des lignes Lorsque le jeu est on affiche « Game Over »"

.PP
Définition à la ligne 19 du fichier mainpage\&.dox\&.
.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour Tetris à partir du code source\&.
