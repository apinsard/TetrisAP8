<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="class_c_vector3" kind="class" prot="public">
    <compoundname>CVector3</compoundname>
    <includes refid="_c_vector3_8h" local="no">CVector3.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_c_vector3_1a06b092361b335f9971323be0ddf759b1" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float CVector3::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
<para>Composante X. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cj/workspace/Tetris/src/math/CVector3.h" line="84" bodyfile="/home/cj/workspace/Tetris/src/math/CVector3.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_vector3_1a20d0b1099477995b22a4f1407e41a7a1" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float CVector3::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
<para>Composante Y. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cj/workspace/Tetris/src/math/CVector3.h" line="85" bodyfile="/home/cj/workspace/Tetris/src/math/CVector3.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_c_vector3_1a9dd3ce85f6aaa17ccc67bfe50a089b3a" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float CVector3::z</definition>
        <argsstring></argsstring>
        <name>z</name>
        <briefdescription>
<para>Composante Z. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cj/workspace/Tetris/src/math/CVector3.h" line="86" bodyfile="/home/cj/workspace/Tetris/src/math/CVector3.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_c_vector3_1a174def5c24cc7447191c845208f43b03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CVector3::CVector3</definition>
        <argsstring>(float X=0, float Y=0, float Z=0)</argsstring>
        <name>CVector3</name>
        <param>
          <type>float</type>
          <declname>X</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>float</type>
          <declname>Y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>float</type>
          <declname>Z</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructeur par défaut</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>: Composante X du vecteur </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Y</parametername>
</parameternamelist>
<parameterdescription>
<para>: Composante Y du vecteur </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Z</parametername>
</parameternamelist>
<parameterdescription>
<para>: Composante Z du vecteur </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cj/workspace/Tetris/src/math/CVector3.h" line="24" bodyfile="/home/cj/workspace/Tetris/src/math/CVector3.h" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_c_vector3_1a98f13cb2666174eea0d103b84e138439" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="glu_8h_1a4292190e3f1f6b373a760c7d9316ad3c" kindref="member">void</ref></type>
        <definition>void CVector3::Set</definition>
        <argsstring>(float X, float Y, float Z)</argsstring>
        <name>Set</name>
        <param>
          <type>float</type>
          <declname>X</declname>
        </param>
        <param>
          <type>float</type>
          <declname>Y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>Z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Réinitialise le vecteur</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>: Composante X du vecteur </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Y</parametername>
</parameternamelist>
<parameterdescription>
<para>: Composante Y du vecteur </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Z</parametername>
</parameternamelist>
<parameterdescription>
<para>: Composante Z du vecteur </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cj/workspace/Tetris/src/math/CVector3.h" line="29" bodyfile="/home/cj/workspace/Tetris/src/math/CVector3.h" bodystart="123" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_c_vector3_1acddbb14f5ba40ae501445d6623247c66" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float CVector3::Length</definition>
        <argsstring>() const </argsstring>
        <name>Length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Renvoie la norme du vecteur</para><para><simplesect kind="return"><para>Valeur de la norme du vecteur sqrt(x² + y² + z²) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cj/workspace/Tetris/src/math/CVector3.h" line="34" bodyfile="/home/cj/workspace/Tetris/src/math/CVector3.h" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_c_vector3_1ad2e5d04d2fdb91de5a7d88be7ade81fc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float CVector3::LengthSq</definition>
        <argsstring>() const </argsstring>
        <name>LengthSq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Renvoie la norme au carré du vecteur</para><para><simplesect kind="return"><para>Carré de la norme du vecteur (x² + y² + z²) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cj/workspace/Tetris/src/math/CVector3.h" line="39" bodyfile="/home/cj/workspace/Tetris/src/math/CVector3.h" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="class_c_vector3_1a01244f1a6afa17ce2f6b3be3b4b5d642" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="glu_8h_1a4292190e3f1f6b373a760c7d9316ad3c" kindref="member">void</ref></type>
        <definition>void CVector3::Normalize</definition>
        <argsstring>()</argsstring>
        <name>Normalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Normalise le vecteur </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cj/workspace/Tetris/src/math/CVector3.h" line="44" bodyfile="/home/cj/workspace/Tetris/src/math/CVector3.h" bodystart="159" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="class_c_vector3_1a4b9cee1bd80cdd61870e450d9f2ea973" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_vector3" kindref="compound">CVector3</ref></type>
        <definition>CVector3 CVector3::operator+</definition>
        <argsstring>() const </argsstring>
        <name>operator+</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opérateur unaire +</para><para><simplesect kind="return"><para>Résultat de l&apos;opération </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cj/workspace/Tetris/src/math/CVector3.h" line="49" bodyfile="/home/cj/workspace/Tetris/src/math/CVector3.h" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="class_c_vector3_1a3e17d7ed8ac714742f9621f1da38e39a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_vector3" kindref="compound">CVector3</ref></type>
        <definition>CVector3 CVector3::operator-</definition>
        <argsstring>() const </argsstring>
        <name>operator-</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opérateur unaire -</para><para><simplesect kind="return"><para>Résultat de l&apos;opération </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cj/workspace/Tetris/src/math/CVector3.h" line="50" bodyfile="/home/cj/workspace/Tetris/src/math/CVector3.h" bodystart="191" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="class_c_vector3_1a22c7b320db43f4c46ebfb61bec9e2877" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_vector3" kindref="compound">CVector3</ref></type>
        <definition>CVector3 CVector3::operator+</definition>
        <argsstring>(const CVector3 &amp;v) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="class_c_vector3" kindref="compound">CVector3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opérateur binaire +</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>: Vecteur à additionner</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Résultat de l&apos;opération </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cj/workspace/Tetris/src/math/CVector3.h" line="55" bodyfile="/home/cj/workspace/Tetris/src/math/CVector3.h" bodystart="206" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="class_c_vector3_1a5c858d07d899ea01693d37583ad212c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c_vector3" kindref="compound">CVector3</ref></type>
        <definition>CVector3 CVector3::operator-</definition>
        <argsstring>(const CVector3 &amp;v) const </argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="class_c_vector3" kindref="compound">CVector3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opérateur binaire -</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>: Vecteur à soustraire</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Résultat de l&apos;opération </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cj/workspace/Tetris/src/math/CVector3.h" line="56" bodyfile="/home/cj/workspace/Tetris/src/math/CVector3.h" bodystart="221" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="class_c_vector3_1acb474e7070d90940aafcab5be32159b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_c_vector3" kindref="compound">CVector3</ref> &amp;</type>
        <definition>const CVector3 &amp; CVector3::operator+=</definition>
        <argsstring>(const CVector3 &amp;v)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="class_c_vector3" kindref="compound">CVector3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opérateur +=</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>: Vecteur à additioner</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Résultat de l&apos;opération </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cj/workspace/Tetris/src/math/CVector3.h" line="61" bodyfile="/home/cj/workspace/Tetris/src/math/CVector3.h" bodystart="234" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="class_c_vector3_1a0aa9b01d91a5db23343a951e4ef23193" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_c_vector3" kindref="compound">CVector3</ref> &amp;</type>
        <definition>const CVector3 &amp; CVector3::operator-=</definition>
        <argsstring>(const CVector3 &amp;v)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="class_c_vector3" kindref="compound">CVector3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opérateur -=</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>: Vecteur à soustraire</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Résultat de l&apos;opération </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cj/workspace/Tetris/src/math/CVector3.h" line="62" bodyfile="/home/cj/workspace/Tetris/src/math/CVector3.h" bodystart="252" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="class_c_vector3_1a43a4a287de701b36bb1f46a4ff453ff0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_c_vector3" kindref="compound">CVector3</ref> &amp;</type>
        <definition>const CVector3 &amp; CVector3::operator*=</definition>
        <argsstring>(float t)</argsstring>
        <name>operator*=</name>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opérateur *= avec un scalaire</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>: Scalaire</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Résultat de l&apos;opération </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cj/workspace/Tetris/src/math/CVector3.h" line="67" bodyfile="/home/cj/workspace/Tetris/src/math/CVector3.h" bodystart="270" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="class_c_vector3_1ab8fad59e43f5551c1cc2411d741104ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_c_vector3" kindref="compound">CVector3</ref> &amp;</type>
        <definition>const CVector3 &amp; CVector3::operator/=</definition>
        <argsstring>(float t)</argsstring>
        <name>operator/=</name>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opérateur /= avec un scalaire</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>: Scalaire</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Résultat de l&apos;opération </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cj/workspace/Tetris/src/math/CVector3.h" line="68" bodyfile="/home/cj/workspace/Tetris/src/math/CVector3.h" bodystart="288" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="class_c_vector3_1a4996ab60ef779a199b8f99aed8329e9f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CVector3::operator==</definition>
        <argsstring>(const CVector3 &amp;v) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_c_vector3" kindref="compound">CVector3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opérateur de comparaison ==</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>: Vecteur à comparer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True si les deux vecteurs sont identiques </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cj/workspace/Tetris/src/math/CVector3.h" line="73" bodyfile="/home/cj/workspace/Tetris/src/math/CVector3.h" bodystart="306" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="class_c_vector3_1af026bd73555b1bc377a2360c7f348b2b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CVector3::operator!=</definition>
        <argsstring>(const CVector3 &amp;v) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_c_vector3" kindref="compound">CVector3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opérateur de comparaison !=</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>: Vecteur à comparer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True si les deux vecteurs sont différents </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cj/workspace/Tetris/src/math/CVector3.h" line="74" bodyfile="/home/cj/workspace/Tetris/src/math/CVector3.h" bodystart="322" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="class_c_vector3_1a316116ffe85965109afbc85e3d8178e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CVector3::operator float *</definition>
        <argsstring>()</argsstring>
        <name>operator float *</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opérateur de cast en float*</para><para><simplesect kind="return"><para>Pointeur sur les composantes du vecteur </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cj/workspace/Tetris/src/math/CVector3.h" line="79" bodyfile="/home/cj/workspace/Tetris/src/math/CVector3.h" bodystart="334" bodyend="337"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/cj/workspace/Tetris/src/math/CVector3.h" line="18" bodyfile="/home/cj/workspace/Tetris/src/math/CVector3.h" bodystart="17" bodyend="87"/>
    <listofallmembers>
      <member refid="class_c_vector3_1a174def5c24cc7447191c845208f43b03" prot="public" virt="non-virtual"><scope>CVector3</scope><name>CVector3</name></member>
      <member refid="class_c_vector3_1acddbb14f5ba40ae501445d6623247c66" prot="public" virt="non-virtual"><scope>CVector3</scope><name>Length</name></member>
      <member refid="class_c_vector3_1ad2e5d04d2fdb91de5a7d88be7ade81fc" prot="public" virt="non-virtual"><scope>CVector3</scope><name>LengthSq</name></member>
      <member refid="class_c_vector3_1a01244f1a6afa17ce2f6b3be3b4b5d642" prot="public" virt="non-virtual"><scope>CVector3</scope><name>Normalize</name></member>
      <member refid="class_c_vector3_1a316116ffe85965109afbc85e3d8178e7" prot="public" virt="non-virtual"><scope>CVector3</scope><name>operator float *</name></member>
      <member refid="class_c_vector3_1af026bd73555b1bc377a2360c7f348b2b" prot="public" virt="non-virtual"><scope>CVector3</scope><name>operator!=</name></member>
      <member refid="class_c_vector3_1a43a4a287de701b36bb1f46a4ff453ff0" prot="public" virt="non-virtual"><scope>CVector3</scope><name>operator*=</name></member>
      <member refid="class_c_vector3_1a4b9cee1bd80cdd61870e450d9f2ea973" prot="public" virt="non-virtual"><scope>CVector3</scope><name>operator+</name></member>
      <member refid="class_c_vector3_1a22c7b320db43f4c46ebfb61bec9e2877" prot="public" virt="non-virtual"><scope>CVector3</scope><name>operator+</name></member>
      <member refid="class_c_vector3_1acb474e7070d90940aafcab5be32159b9" prot="public" virt="non-virtual"><scope>CVector3</scope><name>operator+=</name></member>
      <member refid="class_c_vector3_1a3e17d7ed8ac714742f9621f1da38e39a" prot="public" virt="non-virtual"><scope>CVector3</scope><name>operator-</name></member>
      <member refid="class_c_vector3_1a5c858d07d899ea01693d37583ad212c5" prot="public" virt="non-virtual"><scope>CVector3</scope><name>operator-</name></member>
      <member refid="class_c_vector3_1a0aa9b01d91a5db23343a951e4ef23193" prot="public" virt="non-virtual"><scope>CVector3</scope><name>operator-=</name></member>
      <member refid="class_c_vector3_1ab8fad59e43f5551c1cc2411d741104ab" prot="public" virt="non-virtual"><scope>CVector3</scope><name>operator/=</name></member>
      <member refid="class_c_vector3_1a4996ab60ef779a199b8f99aed8329e9f" prot="public" virt="non-virtual"><scope>CVector3</scope><name>operator==</name></member>
      <member refid="class_c_vector3_1a98f13cb2666174eea0d103b84e138439" prot="public" virt="non-virtual"><scope>CVector3</scope><name>Set</name></member>
      <member refid="class_c_vector3_1a06b092361b335f9971323be0ddf759b1" prot="public" virt="non-virtual"><scope>CVector3</scope><name>x</name></member>
      <member refid="class_c_vector3_1a20d0b1099477995b22a4f1407e41a7a1" prot="public" virt="non-virtual"><scope>CVector3</scope><name>y</name></member>
      <member refid="class_c_vector3_1a9dd3ce85f6aaa17ccc67bfe50a089b3a" prot="public" virt="non-virtual"><scope>CVector3</scope><name>z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
